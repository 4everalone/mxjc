// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * type for defining the common features of equity derivatives.
 */
public abstract class EquityDerivativeLongFormBase extends EquityDerivativeBase implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private DividendConditions dividendConditions;
	
	@Element
	private MethodOfAdjustmentEnum methodOfAdjustment;
	
	@Element
	private ExtraordinaryEvents extraordinaryEvents;
	
    
	/**
	 * public getter
	 *
     * @returns com.leansoft.fpml.nano.DividendConditions
	 */
	public DividendConditions getDividendConditions() {
	    return this.dividendConditions;
	}
	
	/**
	 * public setter
	 *
     * @param com.leansoft.fpml.nano.DividendConditions
	 */
	public void setDividendConditions(DividendConditions dividendConditions) {
	    this.dividendConditions = dividendConditions;
	}
	/**
     * public getter
     *
     * Defines how adjustments will be made to the contract should one or more of the extraordinary events occur.
     *
     * @returns com.leansoft.fpml.nano.MethodOfAdjustmentEnum
	 */
	public MethodOfAdjustmentEnum getMethodOfAdjustment() {
	    return this.methodOfAdjustment;
	}
	
	/**
	 * public setter
	 *
     * Defines how adjustments will be made to the contract should one or more of the extraordinary events occur.
     *
     * @param com.leansoft.fpml.nano.MethodOfAdjustmentEnum
	 */
	public void setMethodOfAdjustment(MethodOfAdjustmentEnum methodOfAdjustment) {
	    this.methodOfAdjustment = methodOfAdjustment;
	}
	/**
     * public getter
     *
     * Where the underlying is shares, specifies events affecting the issuer of those shares that may require the terms of the transaction to be adjusted.
     *
     * @returns com.leansoft.fpml.nano.ExtraordinaryEvents
	 */
	public ExtraordinaryEvents getExtraordinaryEvents() {
	    return this.extraordinaryEvents;
	}
	
	/**
	 * public setter
	 *
     * Where the underlying is shares, specifies events affecting the issuer of those shares that may require the terms of the transaction to be adjusted.
     *
     * @param com.leansoft.fpml.nano.ExtraordinaryEvents
	 */
	public void setExtraordinaryEvents(ExtraordinaryEvents extraordinaryEvents) {
	    this.extraordinaryEvents = extraordinaryEvents;
	}

}