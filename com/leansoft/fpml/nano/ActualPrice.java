// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigDecimal;

public class ActualPrice implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private Currency currency;
	
	@Element
	private BigDecimal amount;
	
	@Element
	private PriceExpressionEnum priceExpression;
	
    
	/**
     * public getter
     *
     * Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).
     *
     * @returns com.leansoft.fpml.nano.Currency
	 */
	public Currency getCurrency() {
	    return this.currency;
	}
	
	/**
	 * public setter
	 *
     * Specifies the currency associated with the net price. This element is not present if the price is expressed in percentage terms (as specified through the priceExpression element).
     *
     * @param com.leansoft.fpml.nano.Currency
	 */
	public void setCurrency(Currency currency) {
	    this.currency = currency;
	}
	/**
     * public getter
     *
     * Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getAmount() {
	    return this.amount;
	}
	
	/**
	 * public setter
	 *
     * Specifies the net price amount. In the case of a fixed income security or a convertible bond, this price includes the accrued interests.
     *
     * @param java.math.BigDecimal
	 */
	public void setAmount(BigDecimal amount) {
	    this.amount = amount;
	}
	/**
     * public getter
     *
     * Specifies whether the price is expressed in absolute or relative terms.
     *
     * @returns com.leansoft.fpml.nano.PriceExpressionEnum
	 */
	public PriceExpressionEnum getPriceExpression() {
	    return this.priceExpression;
	}
	
	/**
	 * public setter
	 *
     * Specifies whether the price is expressed in absolute or relative terms.
     *
     * @param com.leansoft.fpml.nano.PriceExpressionEnum
	 */
	public void setPriceExpression(PriceExpressionEnum priceExpression) {
	    this.priceExpression = priceExpression;
	}

}