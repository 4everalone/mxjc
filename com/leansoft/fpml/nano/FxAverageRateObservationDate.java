// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigDecimal;
import java.util.Date;

/**
 * A type that, for average rate options, is used to describe each specific observation date, as opposed to a parametric frequency of rate observations.
 */
public class FxAverageRateObservationDate implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private Date observationDate;
	
	@Element
	private BigDecimal averageRateWeightingFactor;
	
    
	/**
     * public getter
     *
     * A specific date for which an observation against a particular rate will be made and will be used for subsequent computations.
     *
     * @returns java.util.Date
	 */
	public Date getObservationDate() {
	    return this.observationDate;
	}
	
	/**
	 * public setter
	 *
     * A specific date for which an observation against a particular rate will be made and will be used for subsequent computations.
     *
     * @param java.util.Date
	 */
	public void setObservationDate(Date observationDate) {
	    this.observationDate = observationDate;
	}
	/**
     * public getter
     *
     * An optional factor that can be used for weighting certain observation dates. Typically, firms will weight each date with a factor of 1 if there are standard, unweighted adjustments.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getAverageRateWeightingFactor() {
	    return this.averageRateWeightingFactor;
	}
	
	/**
	 * public setter
	 *
     * An optional factor that can be used for weighting certain observation dates. Typically, firms will weight each date with a factor of 1 if there are standard, unweighted adjustments.
     *
     * @param java.math.BigDecimal
	 */
	public void setAverageRateWeightingFactor(BigDecimal averageRateWeightingFactor) {
	    this.averageRateWeightingFactor = averageRateWeightingFactor;
	}

}