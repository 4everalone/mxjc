// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * Request that a portfolio be defined, either by replacing any pre-existing definition, or by updating or removing individual positions.
 */
@RootElement(name = "positionsAsserted", namespace = "http://www.fpml.org/FpML-5-0/reporting")
public class PositionsAsserted extends RequestMessage implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private InitialPortfolioDefinition portfolio;
	
	@Element
	private boolean submissionsComplete;
	
	@Element
	private Empty replaceAllPositions;
	
	@Element
	private List<DefinePosition> definePosition;
	
	@Element
	private List<Object> definePositionOrRemovePosition;
	
	@Element
	private List<Party> party;
	
    
	/**
     * public getter
     *
     * Contains the portfolio definition.
     *
     * @returns com.leansoft.fpml.nano.InitialPortfolioDefinition
	 */
	public InitialPortfolioDefinition getPortfolio() {
	    return this.portfolio;
	}
	
	/**
	 * public setter
	 *
     * Contains the portfolio definition.
     *
     * @param com.leansoft.fpml.nano.InitialPortfolioDefinition
	 */
	public void setPortfolio(InitialPortfolioDefinition portfolio) {
	    this.portfolio = portfolio;
	}
	/**
     * public getter
     *
     * Indicates whether all portfolio updates have been submitted for this as-of date
     *
     * @returns .boolean
	 */
	public boolean getSubmissionsComplete() {
	    return this.submissionsComplete;
	}
	
	/**
	 * public setter
	 *
     * Indicates whether all portfolio updates have been submitted for this as-of date
     *
     * @param .boolean
	 */
	public void setSubmissionsComplete(boolean submissionsComplete) {
	    this.submissionsComplete = submissionsComplete;
	}
	/**
     * public getter
     *
     * Indicates that this message replaces all previous positions for this portfolio.
     *
     * @returns com.leansoft.fpml.nano.Empty
	 */
	public Empty getReplaceAllPositions() {
	    return this.replaceAllPositions;
	}
	
	/**
	 * public setter
	 *
     * Indicates that this message replaces all previous positions for this portfolio.
     *
     * @param com.leansoft.fpml.nano.Empty
	 */
	public void setReplaceAllPositions(Empty replaceAllPositions) {
	    this.replaceAllPositions = replaceAllPositions;
	}
	/**
     * public getter
     *
     * Used to specify a new position.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.DefinePosition>
	 */
	public List<DefinePosition> getDefinePosition() {
	    return this.definePosition;
	}
	
	/**
	 * public setter
	 *
     * Used to specify a new position.
     *
     * @param java.util.List<com.leansoft.fpml.nano.DefinePosition>
	 */
	public void setDefinePosition(List<DefinePosition> definePosition) {
	    this.definePosition = definePosition;
	}
	/**
	 * public getter
	 *
     * @returns java.util.List<java.lang.Object>
	 */
	public List<Object> getDefinePositionOrRemovePosition() {
	    return this.definePositionOrRemovePosition;
	}
	
	/**
	 * public setter
	 *
     * @param java.util.List<java.lang.Object>
	 */
	public void setDefinePositionOrRemovePosition(List<Object> definePositionOrRemovePosition) {
	    this.definePositionOrRemovePosition = definePositionOrRemovePosition;
	}
	/**
	 * public getter
	 *
     * @returns java.util.List<com.leansoft.fpml.nano.Party>
	 */
	public List<Party> getParty() {
	    return this.party;
	}
	
	/**
	 * public setter
	 *
     * @param java.util.List<com.leansoft.fpml.nano.Party>
	 */
	public void setParty(List<Party> party) {
	    this.party = party;
	}

}