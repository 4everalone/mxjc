// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * A type defining the content model for a message requesting that a previously requested TradeMatch process be cancelled.
 */
@RootElement(name = "cancelTradeMatch", namespace = "http://www.fpml.org/FpML-5-0/reporting")
public class CancelTradeMatch extends RequestMessage implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private PartyTradeIdentifier partyTradeIdentifier;
	
	@Element
	private Party party;
	
    
	/**
     * public getter
     *
     * The trade reference identifier(s) allocated to the trade by the parties involved.
     *
     * @returns com.leansoft.fpml.nano.PartyTradeIdentifier
	 */
	public PartyTradeIdentifier getPartyTradeIdentifier() {
	    return this.partyTradeIdentifier;
	}
	
	/**
	 * public setter
	 *
     * The trade reference identifier(s) allocated to the trade by the parties involved.
     *
     * @param com.leansoft.fpml.nano.PartyTradeIdentifier
	 */
	public void setPartyTradeIdentifier(PartyTradeIdentifier partyTradeIdentifier) {
	    this.partyTradeIdentifier = partyTradeIdentifier;
	}
	/**
     * public getter
     *
     * Parties can perform multiple roles in a trade lifecycle. For example, the principal parties obligated to make payments from time to time during the term of the trade, but may include other parties involved in, or incidental to, the trade, such as parties acting in the role of novation transferor/transferee, broker, calculation agent, etc. In FpML roles are defined in multiple places within a document.
     *
     * @returns com.leansoft.fpml.nano.Party
	 */
	public Party getParty() {
	    return this.party;
	}
	
	/**
	 * public setter
	 *
     * Parties can perform multiple roles in a trade lifecycle. For example, the principal parties obligated to make payments from time to time during the term of the trade, but may include other parties involved in, or incidental to, the trade, such as parties acting in the role of novation transferor/transferee, broker, calculation agent, etc. In FpML roles are defined in multiple places within a document.
     *
     * @param com.leansoft.fpml.nano.Party
	 */
	public void setParty(Party party) {
	    this.party = party;
	}

}