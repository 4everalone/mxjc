// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.math.BigDecimal;

/**
 * Floating Payment Leg of a Dividend Swap.
 */
public class DividendLeg extends DirectionalLegUnderlyer implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private BigDecimal declaredCashDividendPercentage;
	
	@Element
	private BigDecimal declaredCashEquivalentDividendPercentage;
	
	@Element
	private List<DividendPeriodPayment> dividendPeriod;
	
	@Element
	private Boolean excludeSpecialDividends;
	
    
	/**
     * public getter
     *
     * Declared Cash Dividend Percentage.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getDeclaredCashDividendPercentage() {
	    return this.declaredCashDividendPercentage;
	}
	
	/**
	 * public setter
	 *
     * Declared Cash Dividend Percentage.
     *
     * @param java.math.BigDecimal
	 */
	public void setDeclaredCashDividendPercentage(BigDecimal declaredCashDividendPercentage) {
	    this.declaredCashDividendPercentage = declaredCashDividendPercentage;
	}
	/**
     * public getter
     *
     * Declared Cash Equivalent Dividend Percentage.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getDeclaredCashEquivalentDividendPercentage() {
	    return this.declaredCashEquivalentDividendPercentage;
	}
	
	/**
	 * public setter
	 *
     * Declared Cash Equivalent Dividend Percentage.
     *
     * @param java.math.BigDecimal
	 */
	public void setDeclaredCashEquivalentDividendPercentage(BigDecimal declaredCashEquivalentDividendPercentage) {
	    this.declaredCashEquivalentDividendPercentage = declaredCashEquivalentDividendPercentage;
	}
	/**
     * public getter
     *
     * One to many time bounded dividend payment periods, each with a fixed strike and dividend payment date per period.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.DividendPeriodPayment>
	 */
	public List<DividendPeriodPayment> getDividendPeriod() {
	    return this.dividendPeriod;
	}
	
	/**
	 * public setter
	 *
     * One to many time bounded dividend payment periods, each with a fixed strike and dividend payment date per period.
     *
     * @param java.util.List<com.leansoft.fpml.nano.DividendPeriodPayment>
	 */
	public void setDividendPeriod(List<DividendPeriodPayment> dividendPeriod) {
	    this.dividendPeriod = dividendPeriod;
	}
	/**
     * public getter
     *
     * Exclude Special Dividends and Memorial Dividends
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getExcludeSpecialDividends() {
	    return this.excludeSpecialDividends;
	}
	
	/**
	 * public setter
	 *
     * Exclude Special Dividends and Memorial Dividends
     *
     * @param java.lang.Boolean
	 */
	public void setExcludeSpecialDividends(Boolean excludeSpecialDividends) {
	    this.excludeSpecialDividends = excludeSpecialDividends;
	}

}