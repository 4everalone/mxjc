// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

public class ReferencePair implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private LegalEntity referenceEntity;
	
	@Element
	private ReferenceObligation referenceObligation;
	
	@Element
	private Empty noReferenceObligation;
	
	@Element
	private EntityType entityType;
	
    
	/**
     * public getter
     *
     * The corporate or sovereign entity on which you are buying or selling protection and any successor that assumes all or substantially all of its contractual and other obligations. It is vital to use the correct legal name of the entity and to be careful not to choose a subsidiary if you really want to trade protection on a parent company. Please note, Reference Entities cannot be senior or subordinated. It is the obligations of the Reference Entities that can be senior or subordinated. ISDA 2003 Term: Reference Entity
     *
     * @returns com.leansoft.fpml.nano.LegalEntity
	 */
	public LegalEntity getReferenceEntity() {
	    return this.referenceEntity;
	}
	
	/**
	 * public setter
	 *
     * The corporate or sovereign entity on which you are buying or selling protection and any successor that assumes all or substantially all of its contractual and other obligations. It is vital to use the correct legal name of the entity and to be careful not to choose a subsidiary if you really want to trade protection on a parent company. Please note, Reference Entities cannot be senior or subordinated. It is the obligations of the Reference Entities that can be senior or subordinated. ISDA 2003 Term: Reference Entity
     *
     * @param com.leansoft.fpml.nano.LegalEntity
	 */
	public void setReferenceEntity(LegalEntity referenceEntity) {
	    this.referenceEntity = referenceEntity;
	}
	/**
     * public getter
     *
     * The Reference Obligation is a financial instrument that is either issued or guaranteed by the reference entity. It serves to clarify the precise reference entity protection is being offered upon, and its legal position with regard to other related firms (parents/subsidiaries). Furthermore the Reference Obligation is ALWAYS deliverable and establishes the Pari Passu ranking (as the deliverable bonds must rank equal to the reference obligation). ISDA 2003 Term: Reference Obligation
     *
     * @returns com.leansoft.fpml.nano.ReferenceObligation
	 */
	public ReferenceObligation getReferenceObligation() {
	    return this.referenceObligation;
	}
	
	/**
	 * public setter
	 *
     * The Reference Obligation is a financial instrument that is either issued or guaranteed by the reference entity. It serves to clarify the precise reference entity protection is being offered upon, and its legal position with regard to other related firms (parents/subsidiaries). Furthermore the Reference Obligation is ALWAYS deliverable and establishes the Pari Passu ranking (as the deliverable bonds must rank equal to the reference obligation). ISDA 2003 Term: Reference Obligation
     *
     * @param com.leansoft.fpml.nano.ReferenceObligation
	 */
	public void setReferenceObligation(ReferenceObligation referenceObligation) {
	    this.referenceObligation = referenceObligation;
	}
	/**
     * public getter
     *
     * Used to indicate that there is no Reference Obligation associated with this Credit Default Swap and that there will never be one.
     *
     * @returns com.leansoft.fpml.nano.Empty
	 */
	public Empty getNoReferenceObligation() {
	    return this.noReferenceObligation;
	}
	
	/**
	 * public setter
	 *
     * Used to indicate that there is no Reference Obligation associated with this Credit Default Swap and that there will never be one.
     *
     * @param com.leansoft.fpml.nano.Empty
	 */
	public void setNoReferenceObligation(Empty noReferenceObligation) {
	    this.noReferenceObligation = noReferenceObligation;
	}
	/**
     * public getter
     *
     * Defines the reference entity types corresponding to a list of types in the ISDA First to Default documentation.
     *
     * @returns com.leansoft.fpml.nano.EntityType
	 */
	public EntityType getEntityType() {
	    return this.entityType;
	}
	
	/**
	 * public setter
	 *
     * Defines the reference entity types corresponding to a list of types in the ISDA First to Default documentation.
     *
     * @param com.leansoft.fpml.nano.EntityType
	 */
	public void setEntityType(EntityType entityType) {
	    this.entityType = entityType;
	}

}