// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * A type defining an offset used in calculating a new date relative to a reference date. Currently, the only offsets defined are expected to be expressed as either calendar or business day offsets.
 */
public class Offset extends Interval implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private DayTypeEnum dayType;
	
    
	/**
     * public getter
     *
     * In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.
     *
     * @returns com.leansoft.fpml.nano.DayTypeEnum
	 */
	public DayTypeEnum getDayType() {
	    return this.dayType;
	}
	
	/**
	 * public setter
	 *
     * In the case of an offset specified as a number of days, this element defines whether consideration is given as to whether a day is a good business day or not. If a day type of business days is specified then non-business days are ignored when calculating the offset. The financial business centers to use for determination of business days are implied by the context in which this element is used. This element must only be included when the offset is specified as a number of days. If the offset is zero days then the dayType element should not be included.
     *
     * @param com.leansoft.fpml.nano.DayTypeEnum
	 */
	public void setDayType(DayTypeEnum dayType) {
	    this.dayType = dayType;
	}

}