// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * Data elements that can be used to identify the trade for which cashflows are being communicated. This includes both explicit trade identifiers and summary economic details.
 */
public class TradeIdentifyingItems implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private List<PartyTradeIdentifier> partyTradeIdentifier;
	
	@Element
	private TradeDetails tradeDetails;
	
    
	/**
     * public getter
     *
     * Structure defining one or more trade identifiers allocated to the trade by a party. It is expected that for external communication of trade there will be only one tradeId sent in the document per party.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.PartyTradeIdentifier>
	 */
	public List<PartyTradeIdentifier> getPartyTradeIdentifier() {
	    return this.partyTradeIdentifier;
	}
	
	/**
	 * public setter
	 *
     * Structure defining one or more trade identifiers allocated to the trade by a party. It is expected that for external communication of trade there will be only one tradeId sent in the document per party.
     *
     * @param java.util.List<com.leansoft.fpml.nano.PartyTradeIdentifier>
	 */
	public void setPartyTradeIdentifier(List<PartyTradeIdentifier> partyTradeIdentifier) {
	    this.partyTradeIdentifier = partyTradeIdentifier;
	}
	/**
     * public getter
     *
     * Structure that holds some trade-specific elements for identifying the trade only in the case of trades that have not been negotiated through electronic platforms and for which the counterparty's trade ID has not been captured.
     *
     * @returns com.leansoft.fpml.nano.TradeDetails
	 */
	public TradeDetails getTradeDetails() {
	    return this.tradeDetails;
	}
	
	/**
	 * public setter
	 *
     * Structure that holds some trade-specific elements for identifying the trade only in the case of trades that have not been negotiated through electronic platforms and for which the counterparty's trade ID has not been captured.
     *
     * @param com.leansoft.fpml.nano.TradeDetails
	 */
	public void setTradeDetails(TradeDetails tradeDetails) {
	    this.tradeDetails = tradeDetails;
	}

}