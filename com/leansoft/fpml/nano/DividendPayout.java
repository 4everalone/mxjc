// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.math.BigDecimal;

/**
 * A type describing the dividend payout ratio associated with an equity underlyer. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified.
 */
public class DividendPayout implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private BigDecimal dividendPayoutRatio;
	
	@Element
	private String dividendPayoutConditions;
	
	@Element
	private List<PendingPayment> dividendPayment;
	
    
	/**
     * public getter
     *
     * Specifies the actual dividend payout ratio associated with the equity underlyer.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getDividendPayoutRatio() {
	    return this.dividendPayoutRatio;
	}
	
	/**
	 * public setter
	 *
     * Specifies the actual dividend payout ratio associated with the equity underlyer.
     *
     * @param java.math.BigDecimal
	 */
	public void setDividendPayoutRatio(BigDecimal dividendPayoutRatio) {
	    this.dividendPayoutRatio = dividendPayoutRatio;
	}
	/**
     * public getter
     *
     * Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.
     *
     * @returns java.lang.String
	 */
	public String getDividendPayoutConditions() {
	    return this.dividendPayoutConditions;
	}
	
	/**
	 * public setter
	 *
     * Specifies the dividend payout conditions that will be applied in the case where the actual ratio is not known, typically because of regulatory or legal uncertainties.
     *
     * @param java.lang.String
	 */
	public void setDividendPayoutConditions(String dividendPayoutConditions) {
	    this.dividendPayoutConditions = dividendPayoutConditions;
	}
	/**
     * public getter
     *
     * The next upcoming dividend payment or payments.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.PendingPayment>
	 */
	public List<PendingPayment> getDividendPayment() {
	    return this.dividendPayment;
	}
	
	/**
	 * public setter
	 *
     * The next upcoming dividend payment or payments.
     *
     * @param java.util.List<com.leansoft.fpml.nano.PendingPayment>
	 */
	public void setDividendPayment(List<PendingPayment> dividendPayment) {
	    this.dividendPayment = dividendPayment;
	}

}