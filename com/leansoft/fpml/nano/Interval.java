// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigInteger;

/**
 * A type defining a time interval or offset, e.g. one day, three months. Used for specifying frequencies at which events occur, the tenor of a floating rate or an offset relative to another date.
 */
@RootElement(name = "tenor", namespace = "http://www.fpml.org/FpML-5-0/reporting")
public class Interval implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private BigInteger periodMultiplier;
	
	@Element
	private PeriodEnum period;
	
	@Attribute  
	private String id;
	
    
	/**
     * public getter
     *
     * A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days. If the period value is T (Term) then periodMultiplier must contain the value 1.
     *
     * @returns java.math.BigInteger
	 */
	public BigInteger getPeriodMultiplier() {
	    return this.periodMultiplier;
	}
	
	/**
	 * public setter
	 *
     * A time period multiplier, e.g. 1, 2 or 3 etc. A negative value can be used when specifying an offset relative to another date, e.g. -2 days. If the period value is T (Term) then periodMultiplier must contain the value 1.
     *
     * @param java.math.BigInteger
	 */
	public void setPeriodMultiplier(BigInteger periodMultiplier) {
	    this.periodMultiplier = periodMultiplier;
	}
	/**
     * public getter
     *
     * A time period, e.g. a day, week, month, year or term of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).
     *
     * @returns com.leansoft.fpml.nano.PeriodEnum
	 */
	public PeriodEnum getPeriod() {
	    return this.period;
	}
	
	/**
	 * public setter
	 *
     * A time period, e.g. a day, week, month, year or term of the stream. If the periodMultiplier value is 0 (zero) then period must contain the value D (day).
     *
     * @param com.leansoft.fpml.nano.PeriodEnum
	 */
	public void setPeriod(PeriodEnum period) {
	    this.period = period;
	}
	/**
	 * public getter
	 *
     * @returns java.lang.String
	 */
	public String getId() {
	    return this.id;
	}
	
	/**
	 * public setter
	 *
     * @param java.lang.String
	 */
	public void setId(String id) {
	    this.id = id;
	}

}