// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;
import java.util.Date;

/**
 * A type describing a loan underlying asset.
 */
@RootElement(name = "loan", namespace = "http://www.fpml.org/FpML-5-0/reporting")
public class Loan extends UnderlyingAsset implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private List<Object> borrowerOrBorrowerReference;
	
	@Element
	private Lien lien;
	
	@Element
	private FacilityType facilityType;
	
	@Element
	private Date maturity;
	
	@Element
	private Date creditAgreementDate;
	
	@Element
	private UnderlyingAssetTranche tranche;
	
    
	/**
     * public getter
     *
     * Specifies the borrower. There can be more than one borrower. It is meant to be used in the event that there is no Bloomberg Id or the Secured List isn't applicable.
     *
     * @returns java.util.List<java.lang.Object>
	 */
	public List<Object> getBorrowerOrBorrowerReference() {
	    return this.borrowerOrBorrowerReference;
	}
	
	/**
	 * public setter
	 *
     * Specifies the borrower. There can be more than one borrower. It is meant to be used in the event that there is no Bloomberg Id or the Secured List isn't applicable.
     *
     * @param java.util.List<java.lang.Object>
	 */
	public void setBorrowerOrBorrowerReference(List<Object> borrowerOrBorrowerReference) {
	    this.borrowerOrBorrowerReference = borrowerOrBorrowerReference;
	}
	/**
     * public getter
     *
     * Specifies the seniority level of the lien.
     *
     * @returns com.leansoft.fpml.nano.Lien
	 */
	public Lien getLien() {
	    return this.lien;
	}
	
	/**
	 * public setter
	 *
     * Specifies the seniority level of the lien.
     *
     * @param com.leansoft.fpml.nano.Lien
	 */
	public void setLien(Lien lien) {
	    this.lien = lien;
	}
	/**
     * public getter
     *
     * The type of loan facility (letter of credit, revolving, ...).
     *
     * @returns com.leansoft.fpml.nano.FacilityType
	 */
	public FacilityType getFacilityType() {
	    return this.facilityType;
	}
	
	/**
	 * public setter
	 *
     * The type of loan facility (letter of credit, revolving, ...).
     *
     * @param com.leansoft.fpml.nano.FacilityType
	 */
	public void setFacilityType(FacilityType facilityType) {
	    this.facilityType = facilityType;
	}
	/**
     * public getter
     *
     * The date when the principal amount of the loan becomes due and payable.
     *
     * @returns java.util.Date
	 */
	public Date getMaturity() {
	    return this.maturity;
	}
	
	/**
	 * public setter
	 *
     * The date when the principal amount of the loan becomes due and payable.
     *
     * @param java.util.Date
	 */
	public void setMaturity(Date maturity) {
	    this.maturity = maturity;
	}
	/**
     * public getter
     *
     * The credit agreement date is the closing date (the date where the agreement has been signed) for the loans in the credit agreement. Funding of the facilities occurs on (or sometimes a little after) the Credit Agreement date. This underlyer attribute is used to help identify which of the company's outstanding loans are being referenced by knowing to which credit agreement it belongs. ISDA Standards Terms Supplement term: Date of Original Credit Agreement.
     *
     * @returns java.util.Date
	 */
	public Date getCreditAgreementDate() {
	    return this.creditAgreementDate;
	}
	
	/**
	 * public setter
	 *
     * The credit agreement date is the closing date (the date where the agreement has been signed) for the loans in the credit agreement. Funding of the facilities occurs on (or sometimes a little after) the Credit Agreement date. This underlyer attribute is used to help identify which of the company's outstanding loans are being referenced by knowing to which credit agreement it belongs. ISDA Standards Terms Supplement term: Date of Original Credit Agreement.
     *
     * @param java.util.Date
	 */
	public void setCreditAgreementDate(Date creditAgreementDate) {
	    this.creditAgreementDate = creditAgreementDate;
	}
	/**
     * public getter
     *
     * The loan tranche that is subject to the derivative transaction. It will typically be referenced as the Bloomberg tranche number. ISDA Standards Terms Supplement term: Bloomberg Tranche Number.
     *
     * @returns com.leansoft.fpml.nano.UnderlyingAssetTranche
	 */
	public UnderlyingAssetTranche getTranche() {
	    return this.tranche;
	}
	
	/**
	 * public setter
	 *
     * The loan tranche that is subject to the derivative transaction. It will typically be referenced as the Bloomberg tranche number. ISDA Standards Terms Supplement term: Bloomberg Tranche Number.
     *
     * @param com.leansoft.fpml.nano.UnderlyingAssetTranche
	 */
	public void setTranche(UnderlyingAssetTranche tranche) {
	    this.tranche = tranche;
	}

}