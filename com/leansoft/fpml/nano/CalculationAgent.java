// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * A type defining the ISDA calcuation agent responsible for performing duties as defined in the applicable product definitions.
 */
public class CalculationAgent implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private List<PartyReference> calculationAgentPartyReference;
	
	@Element
	private CalculationAgentPartyEnum calculationAgentParty;
	
    
	/**
     * public getter
     *
     * A pointer style reference to a party identifier defined elsewhere in the document. The party referenced is the ISDA Calculation Agent for the trade. If more than one party is referenced then the parties are assumed to be co-calculation agents, i.e. they have joint responsibility.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.PartyReference>
	 */
	public List<PartyReference> getCalculationAgentPartyReference() {
	    return this.calculationAgentPartyReference;
	}
	
	/**
	 * public setter
	 *
     * A pointer style reference to a party identifier defined elsewhere in the document. The party referenced is the ISDA Calculation Agent for the trade. If more than one party is referenced then the parties are assumed to be co-calculation agents, i.e. they have joint responsibility.
     *
     * @param java.util.List<com.leansoft.fpml.nano.PartyReference>
	 */
	public void setCalculationAgentPartyReference(List<PartyReference> calculationAgentPartyReference) {
	    this.calculationAgentPartyReference = calculationAgentPartyReference;
	}
	/**
     * public getter
     *
     * The ISDA Calculation Agent where the actual party responsible for performing the duties associated with an optional early termination provision will be determined at exercise. For example, the Calculation Agent may be defined as being the Non-exercising Party.
     *
     * @returns com.leansoft.fpml.nano.CalculationAgentPartyEnum
	 */
	public CalculationAgentPartyEnum getCalculationAgentParty() {
	    return this.calculationAgentParty;
	}
	
	/**
	 * public setter
	 *
     * The ISDA Calculation Agent where the actual party responsible for performing the duties associated with an optional early termination provision will be determined at exercise. For example, the Calculation Agent may be defined as being the Non-exercising Party.
     *
     * @param com.leansoft.fpml.nano.CalculationAgentPartyEnum
	 */
	public void setCalculationAgentParty(CalculationAgentPartyEnum calculationAgentParty) {
	    this.calculationAgentParty = calculationAgentParty;
	}

}