// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * A type to define the cash settlement terms for a product where cash settlement is applicable.
 */
public class CashSettlement implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private BusinessCenterTime cashSettlementValuationTime;
	
	@Element
	private RelativeDateOffset cashSettlementValuationDate;
	
	@Element
	private CashSettlementPaymentDate cashSettlementPaymentDate;
	
	@Element
	private CashPriceMethod cashPriceMethod;
	
	@Element
	private CashPriceMethod cashPriceAlternateMethod;
	
	@Element
	private YieldCurveMethod parYieldCurveAdjustedMethod;
	
	@Element
	private YieldCurveMethod zeroCouponYieldAdjustedMethod;
	
	@Element
	private YieldCurveMethod parYieldCurveUnadjustedMethod;
	
	@Attribute  
	private String id;
	
    
	/**
     * public getter
     *
     * The time of the cash settlement valuation date when the cash settlement amount will be determined according to the cash settlement method if the parties have not otherwise been able to agree the cash settlement amount.
     *
     * @returns com.leansoft.fpml.nano.BusinessCenterTime
	 */
	public BusinessCenterTime getCashSettlementValuationTime() {
	    return this.cashSettlementValuationTime;
	}
	
	/**
	 * public setter
	 *
     * The time of the cash settlement valuation date when the cash settlement amount will be determined according to the cash settlement method if the parties have not otherwise been able to agree the cash settlement amount.
     *
     * @param com.leansoft.fpml.nano.BusinessCenterTime
	 */
	public void setCashSettlementValuationTime(BusinessCenterTime cashSettlementValuationTime) {
	    this.cashSettlementValuationTime = cashSettlementValuationTime;
	}
	/**
     * public getter
     *
     * The date on which the cash settlement amount will be determined according to the cash settlement method if the parties have not otherwise been able to agree the cash settlement amount.
     *
     * @returns com.leansoft.fpml.nano.RelativeDateOffset
	 */
	public RelativeDateOffset getCashSettlementValuationDate() {
	    return this.cashSettlementValuationDate;
	}
	
	/**
	 * public setter
	 *
     * The date on which the cash settlement amount will be determined according to the cash settlement method if the parties have not otherwise been able to agree the cash settlement amount.
     *
     * @param com.leansoft.fpml.nano.RelativeDateOffset
	 */
	public void setCashSettlementValuationDate(RelativeDateOffset cashSettlementValuationDate) {
	    this.cashSettlementValuationDate = cashSettlementValuationDate;
	}
	/**
     * public getter
     *
     * The date on which the cash settlement amount will be paid, subject to adjustment in accordance with any applicable business day convention. This component would not be present for a mandatory early termination provision where the cash settlement payment date is the mandatory early termination date.
     *
     * @returns com.leansoft.fpml.nano.CashSettlementPaymentDate
	 */
	public CashSettlementPaymentDate getCashSettlementPaymentDate() {
	    return this.cashSettlementPaymentDate;
	}
	
	/**
	 * public setter
	 *
     * The date on which the cash settlement amount will be paid, subject to adjustment in accordance with any applicable business day convention. This component would not be present for a mandatory early termination provision where the cash settlement payment date is the mandatory early termination date.
     *
     * @param com.leansoft.fpml.nano.CashSettlementPaymentDate
	 */
	public void setCashSettlementPaymentDate(CashSettlementPaymentDate cashSettlementPaymentDate) {
	    this.cashSettlementPaymentDate = cashSettlementPaymentDate;
	}
	/**
     * public getter
     *
     * An ISDA defined cash settlement method used for the determination of the applicable cash settlement amount. The method is defined in the 2000 ISDA Definitions, Section 17.3. Cash Settlement Methods, paragraph (a).
     *
     * @returns com.leansoft.fpml.nano.CashPriceMethod
	 */
	public CashPriceMethod getCashPriceMethod() {
	    return this.cashPriceMethod;
	}
	
	/**
	 * public setter
	 *
     * An ISDA defined cash settlement method used for the determination of the applicable cash settlement amount. The method is defined in the 2000 ISDA Definitions, Section 17.3. Cash Settlement Methods, paragraph (a).
     *
     * @param com.leansoft.fpml.nano.CashPriceMethod
	 */
	public void setCashPriceMethod(CashPriceMethod cashPriceMethod) {
	    this.cashPriceMethod = cashPriceMethod;
	}
	/**
     * public getter
     *
     * An ISDA defined cash settlement method used for the determination of the applicable cash settlement amount. The method is defined in the 2000 ISDA Definitions, Section 17.3. Cash Settlement Methods, paragraph (b).
     *
     * @returns com.leansoft.fpml.nano.CashPriceMethod
	 */
	public CashPriceMethod getCashPriceAlternateMethod() {
	    return this.cashPriceAlternateMethod;
	}
	
	/**
	 * public setter
	 *
     * An ISDA defined cash settlement method used for the determination of the applicable cash settlement amount. The method is defined in the 2000 ISDA Definitions, Section 17.3. Cash Settlement Methods, paragraph (b).
     *
     * @param com.leansoft.fpml.nano.CashPriceMethod
	 */
	public void setCashPriceAlternateMethod(CashPriceMethod cashPriceAlternateMethod) {
	    this.cashPriceAlternateMethod = cashPriceAlternateMethod;
	}
	/**
     * public getter
     *
     * An ISDA defined cash settlement method used for the determination of the applicable cash settlement amount. The method is defined in the 2000 ISDA Definitions, Section 17.3. Cash Settlement Methods, paragraph (c).
     *
     * @returns com.leansoft.fpml.nano.YieldCurveMethod
	 */
	public YieldCurveMethod getParYieldCurveAdjustedMethod() {
	    return this.parYieldCurveAdjustedMethod;
	}
	
	/**
	 * public setter
	 *
     * An ISDA defined cash settlement method used for the determination of the applicable cash settlement amount. The method is defined in the 2000 ISDA Definitions, Section 17.3. Cash Settlement Methods, paragraph (c).
     *
     * @param com.leansoft.fpml.nano.YieldCurveMethod
	 */
	public void setParYieldCurveAdjustedMethod(YieldCurveMethod parYieldCurveAdjustedMethod) {
	    this.parYieldCurveAdjustedMethod = parYieldCurveAdjustedMethod;
	}
	/**
     * public getter
     *
     * An ISDA defined cash settlement method used for the determination of the applicable cash settlement amount. The method is defined in the 2000 ISDA Definitions, Section 17.3. Cash Settlement Methods, paragraph (d).
     *
     * @returns com.leansoft.fpml.nano.YieldCurveMethod
	 */
	public YieldCurveMethod getZeroCouponYieldAdjustedMethod() {
	    return this.zeroCouponYieldAdjustedMethod;
	}
	
	/**
	 * public setter
	 *
     * An ISDA defined cash settlement method used for the determination of the applicable cash settlement amount. The method is defined in the 2000 ISDA Definitions, Section 17.3. Cash Settlement Methods, paragraph (d).
     *
     * @param com.leansoft.fpml.nano.YieldCurveMethod
	 */
	public void setZeroCouponYieldAdjustedMethod(YieldCurveMethod zeroCouponYieldAdjustedMethod) {
	    this.zeroCouponYieldAdjustedMethod = zeroCouponYieldAdjustedMethod;
	}
	/**
     * public getter
     *
     * An ISDA defined cash settlement method used for the determination of the applicable cash settlement amount. The method is defined in the 2000 ISDA Definitions, Section 17.3. Cash Settlement Methods, paragraph (e).
     *
     * @returns com.leansoft.fpml.nano.YieldCurveMethod
	 */
	public YieldCurveMethod getParYieldCurveUnadjustedMethod() {
	    return this.parYieldCurveUnadjustedMethod;
	}
	
	/**
	 * public setter
	 *
     * An ISDA defined cash settlement method used for the determination of the applicable cash settlement amount. The method is defined in the 2000 ISDA Definitions, Section 17.3. Cash Settlement Methods, paragraph (e).
     *
     * @param com.leansoft.fpml.nano.YieldCurveMethod
	 */
	public void setParYieldCurveUnadjustedMethod(YieldCurveMethod parYieldCurveUnadjustedMethod) {
	    this.parYieldCurveUnadjustedMethod = parYieldCurveUnadjustedMethod;
	}
	/**
	 * public getter
	 *
     * @returns java.lang.String
	 */
	public String getId() {
	    return this.id;
	}
	
	/**
	 * public setter
	 *
     * @param java.lang.String
	 */
	public void setId(String id) {
	    this.id = id;
	}

}