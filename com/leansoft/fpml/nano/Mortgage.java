// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigDecimal;
import java.util.Date;

/**
 * A type describing a mortgage asset.
 */
@RootElement(name = "mortgage", namespace = "http://www.fpml.org/FpML-5-0/reporting")
public class Mortgage extends UnderlyingAsset implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private LegalEntity insurer;
	
	@Element
	private LegalEntityReference insurerReference;
	
	@Element
	private String issuerName;
	
	@Element
	private PartyReference issuerPartyReference;
	
	@Element
	private CreditSeniority seniority;
	
	@Element
	private CouponType couponType;
	
	@Element
	private BigDecimal couponRate;
	
	@Element
	private Date maturity;
	
	@Element
	private Interval paymentFrequency;
	
	@Element
	private DayCountFraction dayCountFraction;
	
	@Element
	private BigDecimal originalPrincipalAmount;
	
	@Element
	private AssetPool pool;
	
	@Element
	private MortgageSector sector;
	
	@Element
	private String tranche;
	
    
	/**
	 * public getter
	 *
     * @returns com.leansoft.fpml.nano.LegalEntity
	 */
	public LegalEntity getInsurer() {
	    return this.insurer;
	}
	
	/**
	 * public setter
	 *
     * @param com.leansoft.fpml.nano.LegalEntity
	 */
	public void setInsurer(LegalEntity insurer) {
	    this.insurer = insurer;
	}
	/**
	 * public getter
	 *
     * @returns com.leansoft.fpml.nano.LegalEntityReference
	 */
	public LegalEntityReference getInsurerReference() {
	    return this.insurerReference;
	}
	
	/**
	 * public setter
	 *
     * @param com.leansoft.fpml.nano.LegalEntityReference
	 */
	public void setInsurerReference(LegalEntityReference insurerReference) {
	    this.insurerReference = insurerReference;
	}
	/**
	 * public getter
	 *
     * @returns java.lang.String
	 */
	public String getIssuerName() {
	    return this.issuerName;
	}
	
	/**
	 * public setter
	 *
     * @param java.lang.String
	 */
	public void setIssuerName(String issuerName) {
	    this.issuerName = issuerName;
	}
	/**
	 * public getter
	 *
     * @returns com.leansoft.fpml.nano.PartyReference
	 */
	public PartyReference getIssuerPartyReference() {
	    return this.issuerPartyReference;
	}
	
	/**
	 * public setter
	 *
     * @param com.leansoft.fpml.nano.PartyReference
	 */
	public void setIssuerPartyReference(PartyReference issuerPartyReference) {
	    this.issuerPartyReference = issuerPartyReference;
	}
	/**
     * public getter
     *
     * The repayment precedence of a debt instrument.
     *
     * @returns com.leansoft.fpml.nano.CreditSeniority
	 */
	public CreditSeniority getSeniority() {
	    return this.seniority;
	}
	
	/**
	 * public setter
	 *
     * The repayment precedence of a debt instrument.
     *
     * @param com.leansoft.fpml.nano.CreditSeniority
	 */
	public void setSeniority(CreditSeniority seniority) {
	    this.seniority = seniority;
	}
	/**
     * public getter
     *
     * Specifies if the bond has a variable coupon, step-up/down coupon or a zero-coupon.
     *
     * @returns com.leansoft.fpml.nano.CouponType
	 */
	public CouponType getCouponType() {
	    return this.couponType;
	}
	
	/**
	 * public setter
	 *
     * Specifies if the bond has a variable coupon, step-up/down coupon or a zero-coupon.
     *
     * @param com.leansoft.fpml.nano.CouponType
	 */
	public void setCouponType(CouponType couponType) {
	    this.couponType = couponType;
	}
	/**
     * public getter
     *
     * Specifies the coupon rate (expressed in percentage) of a fixed income security or convertible bond.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getCouponRate() {
	    return this.couponRate;
	}
	
	/**
	 * public setter
	 *
     * Specifies the coupon rate (expressed in percentage) of a fixed income security or convertible bond.
     *
     * @param java.math.BigDecimal
	 */
	public void setCouponRate(BigDecimal couponRate) {
	    this.couponRate = couponRate;
	}
	/**
     * public getter
     *
     * The date when the principal amount of a security becomes due and payable.
     *
     * @returns java.util.Date
	 */
	public Date getMaturity() {
	    return this.maturity;
	}
	
	/**
	 * public setter
	 *
     * The date when the principal amount of a security becomes due and payable.
     *
     * @param java.util.Date
	 */
	public void setMaturity(Date maturity) {
	    this.maturity = maturity;
	}
	/**
     * public getter
     *
     * Specifies the frequency at which the bond pays, e.g. 6M.
     *
     * @returns com.leansoft.fpml.nano.Interval
	 */
	public Interval getPaymentFrequency() {
	    return this.paymentFrequency;
	}
	
	/**
	 * public setter
	 *
     * Specifies the frequency at which the bond pays, e.g. 6M.
     *
     * @param com.leansoft.fpml.nano.Interval
	 */
	public void setPaymentFrequency(Interval paymentFrequency) {
	    this.paymentFrequency = paymentFrequency;
	}
	/**
     * public getter
     *
     * The day count basis for the bond.
     *
     * @returns com.leansoft.fpml.nano.DayCountFraction
	 */
	public DayCountFraction getDayCountFraction() {
	    return this.dayCountFraction;
	}
	
	/**
	 * public setter
	 *
     * The day count basis for the bond.
     *
     * @param com.leansoft.fpml.nano.DayCountFraction
	 */
	public void setDayCountFraction(DayCountFraction dayCountFraction) {
	    this.dayCountFraction = dayCountFraction;
	}
	/**
     * public getter
     *
     * The initial issued amount of the mortgage obligation.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getOriginalPrincipalAmount() {
	    return this.originalPrincipalAmount;
	}
	
	/**
	 * public setter
	 *
     * The initial issued amount of the mortgage obligation.
     *
     * @param java.math.BigDecimal
	 */
	public void setOriginalPrincipalAmount(BigDecimal originalPrincipalAmount) {
	    this.originalPrincipalAmount = originalPrincipalAmount;
	}
	/**
     * public getter
     *
     * The morgage pool that is underneath the mortgage obligation.
     *
     * @returns com.leansoft.fpml.nano.AssetPool
	 */
	public AssetPool getPool() {
	    return this.pool;
	}
	
	/**
	 * public setter
	 *
     * The morgage pool that is underneath the mortgage obligation.
     *
     * @param com.leansoft.fpml.nano.AssetPool
	 */
	public void setPool(AssetPool pool) {
	    this.pool = pool;
	}
	/**
     * public getter
     *
     * The sector classification of the mortgage obligation.
     *
     * @returns com.leansoft.fpml.nano.MortgageSector
	 */
	public MortgageSector getSector() {
	    return this.sector;
	}
	
	/**
	 * public setter
	 *
     * The sector classification of the mortgage obligation.
     *
     * @param com.leansoft.fpml.nano.MortgageSector
	 */
	public void setSector(MortgageSector sector) {
	    this.sector = sector;
	}
	/**
     * public getter
     *
     * The mortgage obligation tranche that is subject to the derivative transaction.
     *
     * @returns java.lang.String
	 */
	public String getTranche() {
	    return this.tranche;
	}
	
	/**
	 * public setter
	 *
     * The mortgage obligation tranche that is subject to the derivative transaction.
     *
     * @param java.lang.String
	 */
	public void setTranche(String tranche) {
	    this.tranche = tranche;
	}

}