// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * A type to define an early termination provision for which exercise is mandatory.
 */
@RootElement(name = "mandatoryEarlyTermination", namespace = "http://www.fpml.org/FpML-5-0/reporting")
public class MandatoryEarlyTermination implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private AdjustableDate mandatoryEarlyTerminationDate;
	
	@Element
	private CalculationAgent calculationAgent;
	
	@Element
	private CashSettlement cashSettlement;
	
	@Element
	private MandatoryEarlyTerminationAdjustedDates mandatoryEarlyTerminationAdjustedDates;
	
	@Attribute  
	private String id;
	
    
	/**
     * public getter
     *
     * The early termination date associated with a mandatory early termination of a swap.
     *
     * @returns com.leansoft.fpml.nano.AdjustableDate
	 */
	public AdjustableDate getMandatoryEarlyTerminationDate() {
	    return this.mandatoryEarlyTerminationDate;
	}
	
	/**
	 * public setter
	 *
     * The early termination date associated with a mandatory early termination of a swap.
     *
     * @param com.leansoft.fpml.nano.AdjustableDate
	 */
	public void setMandatoryEarlyTerminationDate(AdjustableDate mandatoryEarlyTerminationDate) {
	    this.mandatoryEarlyTerminationDate = mandatoryEarlyTerminationDate;
	}
	/**
     * public getter
     *
     * The ISDA Calculation Agent responsible for performing duties associated with an optional early termination.
     *
     * @returns com.leansoft.fpml.nano.CalculationAgent
	 */
	public CalculationAgent getCalculationAgent() {
	    return this.calculationAgent;
	}
	
	/**
	 * public setter
	 *
     * The ISDA Calculation Agent responsible for performing duties associated with an optional early termination.
     *
     * @param com.leansoft.fpml.nano.CalculationAgent
	 */
	public void setCalculationAgent(CalculationAgent calculationAgent) {
	    this.calculationAgent = calculationAgent;
	}
	/**
     * public getter
     *
     * If specified, this means that cash settlement is applicable to the transaction and defines the parameters associated with the cash settlement prodcedure. If not specified, then physical settlement is applicable.
     *
     * @returns com.leansoft.fpml.nano.CashSettlement
	 */
	public CashSettlement getCashSettlement() {
	    return this.cashSettlement;
	}
	
	/**
	 * public setter
	 *
     * If specified, this means that cash settlement is applicable to the transaction and defines the parameters associated with the cash settlement prodcedure. If not specified, then physical settlement is applicable.
     *
     * @param com.leansoft.fpml.nano.CashSettlement
	 */
	public void setCashSettlement(CashSettlement cashSettlement) {
	    this.cashSettlement = cashSettlement;
	}
	/**
     * public getter
     *
     * The adjusted dates associated with a mandatory early termination provision. These dates have been adjusted for any applicable business day convention.
     *
     * @returns com.leansoft.fpml.nano.MandatoryEarlyTerminationAdjustedDates
	 */
	public MandatoryEarlyTerminationAdjustedDates getMandatoryEarlyTerminationAdjustedDates() {
	    return this.mandatoryEarlyTerminationAdjustedDates;
	}
	
	/**
	 * public setter
	 *
     * The adjusted dates associated with a mandatory early termination provision. These dates have been adjusted for any applicable business day convention.
     *
     * @param com.leansoft.fpml.nano.MandatoryEarlyTerminationAdjustedDates
	 */
	public void setMandatoryEarlyTerminationAdjustedDates(MandatoryEarlyTerminationAdjustedDates mandatoryEarlyTerminationAdjustedDates) {
	    this.mandatoryEarlyTerminationAdjustedDates = mandatoryEarlyTerminationAdjustedDates;
	}
	/**
	 * public getter
	 *
     * @returns java.lang.String
	 */
	public String getId() {
	    return this.id;
	}
	
	/**
	 * public setter
	 *
     * @param java.lang.String
	 */
	public void setId(String id) {
	    this.id = id;
	}

}