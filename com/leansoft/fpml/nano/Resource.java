// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigDecimal;

/**
 * Describes the resource that contains the media representation of a business event (i.e used for stating the Publicly Available Information). For example, can describe a file or a URL that represents the event.
 */
public class Resource implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private ResourceId resourceId;
	
	@Element
	private Language language;
	
	@Element
	private BigDecimal sizeInBytes;
	
	@Element
	private ResourceLength length;
	
	@Element
	private MimeType mimeType;
	
	@Element
	private String name;
	
	@Element
	private String comments;
	
	@Element
	private String url;
	
    
	/**
     * public getter
     *
     * The unique identifier of the resource within the event.
     *
     * @returns com.leansoft.fpml.nano.ResourceId
	 */
	public ResourceId getResourceId() {
	    return this.resourceId;
	}
	
	/**
	 * public setter
	 *
     * The unique identifier of the resource within the event.
     *
     * @param com.leansoft.fpml.nano.ResourceId
	 */
	public void setResourceId(ResourceId resourceId) {
	    this.resourceId = resourceId;
	}
	/**
     * public getter
     *
     * Indicates the language of the resource, described using the ISO 639-2/T Code.
     *
     * @returns com.leansoft.fpml.nano.Language
	 */
	public Language getLanguage() {
	    return this.language;
	}
	
	/**
	 * public setter
	 *
     * Indicates the language of the resource, described using the ISO 639-2/T Code.
     *
     * @param com.leansoft.fpml.nano.Language
	 */
	public void setLanguage(Language language) {
	    this.language = language;
	}
	/**
     * public getter
     *
     * Indicates the size of the resource in bytes. It could be used by the end user to estimate the download time and storage needs.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getSizeInBytes() {
	    return this.sizeInBytes;
	}
	
	/**
	 * public setter
	 *
     * Indicates the size of the resource in bytes. It could be used by the end user to estimate the download time and storage needs.
     *
     * @param java.math.BigDecimal
	 */
	public void setSizeInBytes(BigDecimal sizeInBytes) {
	    this.sizeInBytes = sizeInBytes;
	}
	/**
     * public getter
     *
     * Indicates the length of the resource. For example, if the resource were a PDF file, the length would be in pages.
     *
     * @returns com.leansoft.fpml.nano.ResourceLength
	 */
	public ResourceLength getLength() {
	    return this.length;
	}
	
	/**
	 * public setter
	 *
     * Indicates the length of the resource. For example, if the resource were a PDF file, the length would be in pages.
     *
     * @param com.leansoft.fpml.nano.ResourceLength
	 */
	public void setLength(ResourceLength length) {
	    this.length = length;
	}
	/**
     * public getter
     *
     * Indicates the type of media used to store the content. mimeType is used to determine the software product(s) that can read the content. MIME Types are described in RFC 2046.
     *
     * @returns com.leansoft.fpml.nano.MimeType
	 */
	public MimeType getMimeType() {
	    return this.mimeType;
	}
	
	/**
	 * public setter
	 *
     * Indicates the type of media used to store the content. mimeType is used to determine the software product(s) that can read the content. MIME Types are described in RFC 2046.
     *
     * @param com.leansoft.fpml.nano.MimeType
	 */
	public void setMimeType(MimeType mimeType) {
	    this.mimeType = mimeType;
	}
	/**
     * public getter
     *
     * The name of the resource.
     *
     * @returns java.lang.String
	 */
	public String getName() {
	    return this.name;
	}
	
	/**
	 * public setter
	 *
     * The name of the resource.
     *
     * @param java.lang.String
	 */
	public void setName(String name) {
	    this.name = name;
	}
	/**
     * public getter
     *
     * Any additional comments that are deemed necessary. For example, which software version is required to open the document? Or, how does this resource relate to the others for this event?
     *
     * @returns java.lang.String
	 */
	public String getComments() {
	    return this.comments;
	}
	
	/**
	 * public setter
	 *
     * Any additional comments that are deemed necessary. For example, which software version is required to open the document? Or, how does this resource relate to the others for this event?
     *
     * @param java.lang.String
	 */
	public void setComments(String comments) {
	    this.comments = comments;
	}
	/**
     * public getter
     *
     * Indicates the URL at which the resource can be found.
     *
     * @returns java.lang.String
	 */
	public String getUrl() {
	    return this.url;
	}
	
	/**
	 * public setter
	 *
     * Indicates the URL at which the resource can be found.
     *
     * @param java.lang.String
	 */
	public void setUrl(String url) {
	    this.url = url;
	}

}