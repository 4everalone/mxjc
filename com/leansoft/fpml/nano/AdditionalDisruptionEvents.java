// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * A type for defining ISDA 2002 Equity Derivative Additional Disruption Events
 */
public class AdditionalDisruptionEvents implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private boolean changeInLaw;
	
	@Element
	private Boolean failureToDeliver;
	
	@Element
	private boolean insolvencyFiling;
	
	@Element
	private boolean hedgingDisruption;
	
	@Element
	private boolean lossOfStockBorrow;
	
	@Element
	private boolean increasedCostOfStockBorrow;
	
	@Element
	private boolean increasedCostOfHedging;
	
	@Element
	private PartyReference determiningPartyReference;
	
    
	/**
     * public getter
     *
     * If true, then change in law is applicable
     *
     * @returns .boolean
	 */
	public boolean getChangeInLaw() {
	    return this.changeInLaw;
	}
	
	/**
	 * public setter
	 *
     * If true, then change in law is applicable
     *
     * @param .boolean
	 */
	public void setChangeInLaw(boolean changeInLaw) {
	    this.changeInLaw = changeInLaw;
	}
	/**
     * public getter
     *
     * Where the underlying is shares and the transaction is physically settled, then, if true, a failure to deliver the shares on the settlement date will not be an event of default for the purposes of the master agreement.
     *
     * @returns java.lang.Boolean
	 */
	public Boolean getFailureToDeliver() {
	    return this.failureToDeliver;
	}
	
	/**
	 * public setter
	 *
     * Where the underlying is shares and the transaction is physically settled, then, if true, a failure to deliver the shares on the settlement date will not be an event of default for the purposes of the master agreement.
     *
     * @param java.lang.Boolean
	 */
	public void setFailureToDeliver(Boolean failureToDeliver) {
	    this.failureToDeliver = failureToDeliver;
	}
	/**
     * public getter
     *
     * If true, then insolvency filing is applicable
     *
     * @returns .boolean
	 */
	public boolean getInsolvencyFiling() {
	    return this.insolvencyFiling;
	}
	
	/**
	 * public setter
	 *
     * If true, then insolvency filing is applicable
     *
     * @param .boolean
	 */
	public void setInsolvencyFiling(boolean insolvencyFiling) {
	    this.insolvencyFiling = insolvencyFiling;
	}
	/**
     * public getter
     *
     * If true, then hedging disruption is applicable
     *
     * @returns .boolean
	 */
	public boolean getHedgingDisruption() {
	    return this.hedgingDisruption;
	}
	
	/**
	 * public setter
	 *
     * If true, then hedging disruption is applicable
     *
     * @param .boolean
	 */
	public void setHedgingDisruption(boolean hedgingDisruption) {
	    this.hedgingDisruption = hedgingDisruption;
	}
	/**
     * public getter
     *
     * If true, then loss of stock borrow is applicable
     *
     * @returns .boolean
	 */
	public boolean getLossOfStockBorrow() {
	    return this.lossOfStockBorrow;
	}
	
	/**
	 * public setter
	 *
     * If true, then loss of stock borrow is applicable
     *
     * @param .boolean
	 */
	public void setLossOfStockBorrow(boolean lossOfStockBorrow) {
	    this.lossOfStockBorrow = lossOfStockBorrow;
	}
	/**
     * public getter
     *
     * If true, then increased cost of stock borrow is applicable
     *
     * @returns .boolean
	 */
	public boolean getIncreasedCostOfStockBorrow() {
	    return this.increasedCostOfStockBorrow;
	}
	
	/**
	 * public setter
	 *
     * If true, then increased cost of stock borrow is applicable
     *
     * @param .boolean
	 */
	public void setIncreasedCostOfStockBorrow(boolean increasedCostOfStockBorrow) {
	    this.increasedCostOfStockBorrow = increasedCostOfStockBorrow;
	}
	/**
     * public getter
     *
     * If true, then increased cost of hedging is applicable
     *
     * @returns .boolean
	 */
	public boolean getIncreasedCostOfHedging() {
	    return this.increasedCostOfHedging;
	}
	
	/**
	 * public setter
	 *
     * If true, then increased cost of hedging is applicable
     *
     * @param .boolean
	 */
	public void setIncreasedCostOfHedging(boolean increasedCostOfHedging) {
	    this.increasedCostOfHedging = increasedCostOfHedging;
	}
	/**
     * public getter
     *
     * A reference to the party which determines additional disruption events
     *
     * @returns com.leansoft.fpml.nano.PartyReference
	 */
	public PartyReference getDeterminingPartyReference() {
	    return this.determiningPartyReference;
	}
	
	/**
	 * public setter
	 *
     * A reference to the party which determines additional disruption events
     *
     * @param com.leansoft.fpml.nano.PartyReference
	 */
	public void setDeterminingPartyReference(PartyReference determiningPartyReference) {
	    this.determiningPartyReference = determiningPartyReference;
	}

}