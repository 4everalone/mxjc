// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigInteger;
import java.math.BigDecimal;

/**
 * A type describing the correlation amount of a correlation swap
 */
public class Correlation extends CalculationFromObservation implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private Money notionalAmount;
	
	@Element
	private BigDecimal correlationStrikePrice;
	
	@Element
	private BoundedCorrelation boundedCorrelation;
	
	@Element
	private BigInteger numberOfDataSeries;
	
    
	/**
     * public getter
     *
     * Notional amount, which is a cash multiplier
     *
     * @returns com.leansoft.fpml.nano.Money
	 */
	public Money getNotionalAmount() {
	    return this.notionalAmount;
	}
	
	/**
	 * public setter
	 *
     * Notional amount, which is a cash multiplier
     *
     * @param com.leansoft.fpml.nano.Money
	 */
	public void setNotionalAmount(Money notionalAmount) {
	    this.notionalAmount = notionalAmount;
	}
	/**
     * public getter
     *
     * Correlation Strike Price
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getCorrelationStrikePrice() {
	    return this.correlationStrikePrice;
	}
	
	/**
	 * public setter
	 *
     * Correlation Strike Price
     *
     * @param java.math.BigDecimal
	 */
	public void setCorrelationStrikePrice(BigDecimal correlationStrikePrice) {
	    this.correlationStrikePrice = correlationStrikePrice;
	}
	/**
     * public getter
     *
     * Bounded Correlation
     *
     * @returns com.leansoft.fpml.nano.BoundedCorrelation
	 */
	public BoundedCorrelation getBoundedCorrelation() {
	    return this.boundedCorrelation;
	}
	
	/**
	 * public setter
	 *
     * Bounded Correlation
     *
     * @param com.leansoft.fpml.nano.BoundedCorrelation
	 */
	public void setBoundedCorrelation(BoundedCorrelation boundedCorrelation) {
	    this.boundedCorrelation = boundedCorrelation;
	}
	/**
     * public getter
     *
     * Number of data series, normal market practice is that correlation data sets are drawn from geographic market areas, such as America, Europe and Asia Pacific, each of these geographic areas will have its own data series to avoid contagion
     *
     * @returns java.math.BigInteger
	 */
	public BigInteger getNumberOfDataSeries() {
	    return this.numberOfDataSeries;
	}
	
	/**
	 * public setter
	 *
     * Number of data series, normal market practice is that correlation data sets are drawn from geographic market areas, such as America, Europe and Asia Pacific, each of these geographic areas will have its own data series to avoid contagion
     *
     * @param java.math.BigInteger
	 */
	public void setNumberOfDataSeries(BigInteger numberOfDataSeries) {
	    this.numberOfDataSeries = numberOfDataSeries;
	}

}