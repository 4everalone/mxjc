// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * A type describing the amount that will paid or received on each of the payment dates. This type is used to define both the Equity Amount and the Interest Amount.
 */
public class LegAmount implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private IdentifiedCurrency currency;
	
	@Element
	private DeterminationMethod determinationMethod;
	
	@Element
	private IdentifiedCurrencyReference currencyReference;
	
	@Element
	private ReferenceAmount referenceAmount;
	
	@Element
	private Formula formula;
	
	@Element
	private byte[] encodedDescription;
	
	@Element
	private AdjustableRelativeOrPeriodicDates calculationDates;
	
    
	/**
     * public getter
     *
     * The currency in which an amount is denominated.
     *
     * @returns com.leansoft.fpml.nano.IdentifiedCurrency
	 */
	public IdentifiedCurrency getCurrency() {
	    return this.currency;
	}
	
	/**
	 * public setter
	 *
     * The currency in which an amount is denominated.
     *
     * @param com.leansoft.fpml.nano.IdentifiedCurrency
	 */
	public void setCurrency(IdentifiedCurrency currency) {
	    this.currency = currency;
	}
	/**
     * public getter
     *
     * Specifies the method according to which an amount or a date is determined.
     *
     * @returns com.leansoft.fpml.nano.DeterminationMethod
	 */
	public DeterminationMethod getDeterminationMethod() {
	    return this.determinationMethod;
	}
	
	/**
	 * public setter
	 *
     * Specifies the method according to which an amount or a date is determined.
     *
     * @param com.leansoft.fpml.nano.DeterminationMethod
	 */
	public void setDeterminationMethod(DeterminationMethod determinationMethod) {
	    this.determinationMethod = determinationMethod;
	}
	/**
     * public getter
     *
     * The currency in which an amount is denominated.
     *
     * @returns com.leansoft.fpml.nano.IdentifiedCurrencyReference
	 */
	public IdentifiedCurrencyReference getCurrencyReference() {
	    return this.currencyReference;
	}
	
	/**
	 * public setter
	 *
     * The currency in which an amount is denominated.
     *
     * @param com.leansoft.fpml.nano.IdentifiedCurrencyReference
	 */
	public void setCurrencyReference(IdentifiedCurrencyReference currencyReference) {
	    this.currencyReference = currencyReference;
	}
	/**
     * public getter
     *
     * Specifies the reference Amount when this term either corresponds to the standard ISDA Definition (either the 2002 Equity Definition for the Equity Amount, or the 2000 Definition for the Interest Amount), or points to a term defined elsewhere in the swap document.
     *
     * @returns com.leansoft.fpml.nano.ReferenceAmount
	 */
	public ReferenceAmount getReferenceAmount() {
	    return this.referenceAmount;
	}
	
	/**
	 * public setter
	 *
     * Specifies the reference Amount when this term either corresponds to the standard ISDA Definition (either the 2002 Equity Definition for the Equity Amount, or the 2000 Definition for the Interest Amount), or points to a term defined elsewhere in the swap document.
     *
     * @param com.leansoft.fpml.nano.ReferenceAmount
	 */
	public void setReferenceAmount(ReferenceAmount referenceAmount) {
	    this.referenceAmount = referenceAmount;
	}
	/**
     * public getter
     *
     * Specifies a formula, with its description and components.
     *
     * @returns com.leansoft.fpml.nano.Formula
	 */
	public Formula getFormula() {
	    return this.formula;
	}
	
	/**
	 * public setter
	 *
     * Specifies a formula, with its description and components.
     *
     * @param com.leansoft.fpml.nano.Formula
	 */
	public void setFormula(Formula formula) {
	    this.formula = formula;
	}
	/**
     * public getter
     *
     * Description of the leg amount when represented through an encoded image.
     *
     * @returns .byte[]
	 */
	public byte[] getEncodedDescription() {
	    return this.encodedDescription;
	}
	
	/**
	 * public setter
	 *
     * Description of the leg amount when represented through an encoded image.
     *
     * @param .byte[]
	 */
	public void setEncodedDescription(byte[] encodedDescription) {
	    this.encodedDescription = encodedDescription;
	}
	/**
     * public getter
     *
     * Specifies the date on which a calculation or an observation will be performed for the purpose of defining the Equity Amount, and in accordance to the definition terms of this latter.
     *
     * @returns com.leansoft.fpml.nano.AdjustableRelativeOrPeriodicDates
	 */
	public AdjustableRelativeOrPeriodicDates getCalculationDates() {
	    return this.calculationDates;
	}
	
	/**
	 * public setter
	 *
     * Specifies the date on which a calculation or an observation will be performed for the purpose of defining the Equity Amount, and in accordance to the definition terms of this latter.
     *
     * @param com.leansoft.fpml.nano.AdjustableRelativeOrPeriodicDates
	 */
	public void setCalculationDates(AdjustableRelativeOrPeriodicDates calculationDates) {
	    this.calculationDates = calculationDates;
	}

}