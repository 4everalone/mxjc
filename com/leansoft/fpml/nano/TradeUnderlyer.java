// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * The underlying asset/index/reference price etc. whose rate/price may be observed to compute the value of the cashflow. It can be an index, fixed rate, listed security, quoted currency pair, or a reference entity (for credit derivatives).
 */
public class TradeUnderlyer implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private FloatingRate floatingRate;
	
	@Element
	private Schedule fixedRate;
	
	@Element
	private LegalEntity referenceEntity;
	
	@Attribute  
	private String id;
	
    
	/**
     * public getter
     *
     * A floating rate.
     *
     * @returns com.leansoft.fpml.nano.FloatingRate
	 */
	public FloatingRate getFloatingRate() {
	    return this.floatingRate;
	}
	
	/**
	 * public setter
	 *
     * A floating rate.
     *
     * @param com.leansoft.fpml.nano.FloatingRate
	 */
	public void setFloatingRate(FloatingRate floatingRate) {
	    this.floatingRate = floatingRate;
	}
	/**
     * public getter
     *
     * The fixed rate or fixed rate schedule expressed as explicit fixed rates and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments.
     *
     * @returns com.leansoft.fpml.nano.Schedule
	 */
	public Schedule getFixedRate() {
	    return this.fixedRate;
	}
	
	/**
	 * public setter
	 *
     * The fixed rate or fixed rate schedule expressed as explicit fixed rates and dates. In the case of a schedule, the step dates may be subject to adjustment in accordance with any adjustments specified in calculationPeriodDatesAdjustments.
     *
     * @param com.leansoft.fpml.nano.Schedule
	 */
	public void setFixedRate(Schedule fixedRate) {
	    this.fixedRate = fixedRate;
	}
	/**
     * public getter
     *
     * The corporate or sovereign entity on which you are buying or selling protection and any successor that assumes all or substantially all of its contractual and other obligations. It is vital to use the correct legal name of the entity and to be careful not to choose a subsidiary if you really want to trade protection on a parent company. Please note, Reference Entities cannot be senior or subordinated. It is the obligations of the Reference Entities that can be senior or subordinated. ISDA 2003 Term: Reference Entity
     *
     * @returns com.leansoft.fpml.nano.LegalEntity
	 */
	public LegalEntity getReferenceEntity() {
	    return this.referenceEntity;
	}
	
	/**
	 * public setter
	 *
     * The corporate or sovereign entity on which you are buying or selling protection and any successor that assumes all or substantially all of its contractual and other obligations. It is vital to use the correct legal name of the entity and to be careful not to choose a subsidiary if you really want to trade protection on a parent company. Please note, Reference Entities cannot be senior or subordinated. It is the obligations of the Reference Entities that can be senior or subordinated. ISDA 2003 Term: Reference Entity
     *
     * @param com.leansoft.fpml.nano.LegalEntity
	 */
	public void setReferenceEntity(LegalEntity referenceEntity) {
	    this.referenceEntity = referenceEntity;
	}
	/**
	 * public getter
	 *
     * @returns java.lang.String
	 */
	public String getId() {
	    return this.id;
	}
	
	/**
	 * public setter
	 *
     * @param java.lang.String
	 */
	public void setId(String id) {
	    this.id = id;
	}

}