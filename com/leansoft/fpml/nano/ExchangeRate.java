// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigDecimal;

/**
 * A type that is used for describing the exchange rate for a particular transaction.
 */
public class ExchangeRate extends FxRate implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private BigDecimal spotRate;
	
	@Element
	private BigDecimal forwardPoints;
	
	@Element
	private SideRates sideRates;
	
    
	/**
     * public getter
     *
     * An optional element used for FX forwards and certain types of FX OTC options. For deals consumated in the FX Forwards Market, this represents the current market rate for a particular currency pair. For barrier and digital/binary options, it can be useful to include the spot rate at the time the option was executed to make it easier to know whether the option needs to move "up" or "down" to be triggered.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getSpotRate() {
	    return this.spotRate;
	}
	
	/**
	 * public setter
	 *
     * An optional element used for FX forwards and certain types of FX OTC options. For deals consumated in the FX Forwards Market, this represents the current market rate for a particular currency pair. For barrier and digital/binary options, it can be useful to include the spot rate at the time the option was executed to make it easier to know whether the option needs to move "up" or "down" to be triggered.
     *
     * @param java.math.BigDecimal
	 */
	public void setSpotRate(BigDecimal spotRate) {
	    this.spotRate = spotRate;
	}
	/**
     * public getter
     *
     * An optional element used for deals consumated in the FX Forwards market. Forward points represent the interest rate differential between the two currencies traded and are quoted as a preminum or a discount. Forward points are added to, or subtracted from, the spot rate to create the rate of the forward trade.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getForwardPoints() {
	    return this.forwardPoints;
	}
	
	/**
	 * public setter
	 *
     * An optional element used for deals consumated in the FX Forwards market. Forward points represent the interest rate differential between the two currencies traded and are quoted as a preminum or a discount. Forward points are added to, or subtracted from, the spot rate to create the rate of the forward trade.
     *
     * @param java.math.BigDecimal
	 */
	public void setForwardPoints(BigDecimal forwardPoints) {
	    this.forwardPoints = forwardPoints;
	}
	/**
     * public getter
     *
     * An optional element that allow for definition of rates against base currency for non-base currency FX contracts.
     *
     * @returns com.leansoft.fpml.nano.SideRates
	 */
	public SideRates getSideRates() {
	    return this.sideRates;
	}
	
	/**
	 * public setter
	 *
     * An optional element that allow for definition of rates against base currency for non-base currency FX contracts.
     *
     * @param com.leansoft.fpml.nano.SideRates
	 */
	public void setSideRates(SideRates sideRates) {
	    this.sideRates = sideRates;
	}

}