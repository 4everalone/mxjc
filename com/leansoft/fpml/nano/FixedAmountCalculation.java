// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

public class FixedAmountCalculation implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private CalculationAmount calculationAmount;
	
	@Element
	private FixedRate fixedRate;
	
	@Element
	private DayCountFraction dayCountFraction;
	
    
	/**
     * public getter
     *
     * The notional amount used in the calculation of fixed amounts where an amount is calculated on a formula basis, i.e. fixed amount = fixed rate payer calculation amount x fixed rate x fixed rate day count fraction. ISDA 2003 Term: Fixed Rate Payer Calculation Amount.
     *
     * @returns com.leansoft.fpml.nano.CalculationAmount
	 */
	public CalculationAmount getCalculationAmount() {
	    return this.calculationAmount;
	}
	
	/**
	 * public setter
	 *
     * The notional amount used in the calculation of fixed amounts where an amount is calculated on a formula basis, i.e. fixed amount = fixed rate payer calculation amount x fixed rate x fixed rate day count fraction. ISDA 2003 Term: Fixed Rate Payer Calculation Amount.
     *
     * @param com.leansoft.fpml.nano.CalculationAmount
	 */
	public void setCalculationAmount(CalculationAmount calculationAmount) {
	    this.calculationAmount = calculationAmount;
	}
	/**
     * public getter
     *
     * The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.
     *
     * @returns com.leansoft.fpml.nano.FixedRate
	 */
	public FixedRate getFixedRate() {
	    return this.fixedRate;
	}
	
	/**
	 * public setter
	 *
     * The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.
     *
     * @param com.leansoft.fpml.nano.FixedRate
	 */
	public void setFixedRate(FixedRate fixedRate) {
	    this.fixedRate = fixedRate;
	}
	/**
     * public getter
     *
     * The day count fraction. ISDA 2003 Term: Fixed Rate Day Count Fraction.
     *
     * @returns com.leansoft.fpml.nano.DayCountFraction
	 */
	public DayCountFraction getDayCountFraction() {
	    return this.dayCountFraction;
	}
	
	/**
	 * public setter
	 *
     * The day count fraction. ISDA 2003 Term: Fixed Rate Day Count Fraction.
     *
     * @param com.leansoft.fpml.nano.DayCountFraction
	 */
	public void setDayCountFraction(DayCountFraction dayCountFraction) {
	    this.dayCountFraction = dayCountFraction;
	}

}