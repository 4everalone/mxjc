// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * A type defining the content for a standard message sent when a recipient cannot interpret or process an earlier message.
 */
@RootElement(name = "messageRejected", namespace = "http://www.fpml.org/FpML-5-0/reporting")
public class MessageRejected extends NotificationMessage implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private List<Reason> reason;
	
	@Element
	private AdditionalData additionalData;
	
    
	/**
     * public getter
     *
     * An instance of the Reason type used to record the nature of any errors associated with a message.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.Reason>
	 */
	public List<Reason> getReason() {
	    return this.reason;
	}
	
	/**
	 * public setter
	 *
     * An instance of the Reason type used to record the nature of any errors associated with a message.
     *
     * @param java.util.List<com.leansoft.fpml.nano.Reason>
	 */
	public void setReason(List<Reason> reason) {
	    this.reason = reason;
	}
	/**
     * public getter
     *
     * Any string of additional data that may help the message processor, for example in a rejection message this might contain a code value or the text of the original request (within a CDATA section).
     *
     * @returns com.leansoft.fpml.nano.AdditionalData
	 */
	public AdditionalData getAdditionalData() {
	    return this.additionalData;
	}
	
	/**
	 * public setter
	 *
     * Any string of additional data that may help the message processor, for example in a rejection message this might contain a code value or the text of the original request (within a CDATA section).
     *
     * @param com.leansoft.fpml.nano.AdditionalData
	 */
	public void setAdditionalData(AdditionalData additionalData) {
	    this.additionalData = additionalData;
	}

}