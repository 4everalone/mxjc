// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigDecimal;

/**
 * A type describing the method for accruing interests on dividends. Can be either a fixed rate reference or a floating rate reference.
 */
public class InterestAccrualsMethod implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private FloatingRateCalculation floatingRateCalculation;
	
	@Element
	private BigDecimal fixedRate;
	
    
	/**
     * public getter
     *
     * The floating rate calculation definitions
     *
     * @returns com.leansoft.fpml.nano.FloatingRateCalculation
	 */
	public FloatingRateCalculation getFloatingRateCalculation() {
	    return this.floatingRateCalculation;
	}
	
	/**
	 * public setter
	 *
     * The floating rate calculation definitions
     *
     * @param com.leansoft.fpml.nano.FloatingRateCalculation
	 */
	public void setFloatingRateCalculation(FloatingRateCalculation floatingRateCalculation) {
	    this.floatingRateCalculation = floatingRateCalculation;
	}
	/**
     * public getter
     *
     * The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getFixedRate() {
	    return this.fixedRate;
	}
	
	/**
	 * public setter
	 *
     * The calculation period fixed rate. A per annum rate, expressed as a decimal. A fixed rate of 5% would be represented as 0.05.
     *
     * @param java.math.BigDecimal
	 */
	public void setFixedRate(BigDecimal fixedRate) {
	    this.fixedRate = fixedRate;
	}

}