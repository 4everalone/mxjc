// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigInteger;
import java.util.List;

/**
 * A collection of related trades or positions and the corresponding aggregate exposures generated by these.
 */
public class Position implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private PositionId positionId;
	
	@Element
	private BigInteger version;
	
	@Element
	private ReportingRoles reportingRoles;
	
	@Element
	private PositionConstituent constituent;
	
	@Element
	private List<ScheduledDate> scheduledDate;
	
	@Element
	private List<AssetValuation> valuation;
	
	@Attribute  
	private String id;
	
    
	/**
     * public getter
     *
     * A version-independent identifier for the position, possibly based on trade identifier.
     *
     * @returns com.leansoft.fpml.nano.PositionId
	 */
	public PositionId getPositionId() {
	    return this.positionId;
	}
	
	/**
	 * public setter
	 *
     * A version-independent identifier for the position, possibly based on trade identifier.
     *
     * @param com.leansoft.fpml.nano.PositionId
	 */
	public void setPositionId(PositionId positionId) {
	    this.positionId = positionId;
	}
	/**
     * public getter
     *
     * A version identifier. Version identifiers must be ascending, i.e. higher numbers imply newer versions. There is no requirement that version identifiers for a position be sequential or small, so for example timestamp-based version identifiers could be used.
     *
     * @returns java.math.BigInteger
	 */
	public BigInteger getVersion() {
	    return this.version;
	}
	
	/**
	 * public setter
	 *
     * A version identifier. Version identifiers must be ascending, i.e. higher numbers imply newer versions. There is no requirement that version identifiers for a position be sequential or small, so for example timestamp-based version identifiers could be used.
     *
     * @param java.math.BigInteger
	 */
	public void setVersion(BigInteger version) {
	    this.version = version;
	}
	/**
     * public getter
     *
     * Information about the roles of the parties with respect to reporting the positions.
     *
     * @returns com.leansoft.fpml.nano.ReportingRoles
	 */
	public ReportingRoles getReportingRoles() {
	    return this.reportingRoles;
	}
	
	/**
	 * public setter
	 *
     * Information about the roles of the parties with respect to reporting the positions.
     *
     * @param com.leansoft.fpml.nano.ReportingRoles
	 */
	public void setReportingRoles(ReportingRoles reportingRoles) {
	    this.reportingRoles = reportingRoles;
	}
	/**
     * public getter
     *
     * The components that create this position.
     *
     * @returns com.leansoft.fpml.nano.PositionConstituent
	 */
	public PositionConstituent getConstituent() {
	    return this.constituent;
	}
	
	/**
	 * public setter
	 *
     * The components that create this position.
     *
     * @param com.leansoft.fpml.nano.PositionConstituent
	 */
	public void setConstituent(PositionConstituent constituent) {
	    this.constituent = constituent;
	}
	/**
     * public getter
     *
     * Position level schedule date, such as final payment dates, in a simple and flexible format.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.ScheduledDate>
	 */
	public List<ScheduledDate> getScheduledDate() {
	    return this.scheduledDate;
	}
	
	/**
	 * public setter
	 *
     * Position level schedule date, such as final payment dates, in a simple and flexible format.
     *
     * @param java.util.List<com.leansoft.fpml.nano.ScheduledDate>
	 */
	public void setScheduledDate(List<ScheduledDate> scheduledDate) {
	    this.scheduledDate = scheduledDate;
	}
	/**
     * public getter
     *
     * Valuation reported for the position, such as NPV or accrued interest. The asset/object references in the valuations should refer to the deal or components of the deal in the position, e.g. legs, streams, or underlyers.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.AssetValuation>
	 */
	public List<AssetValuation> getValuation() {
	    return this.valuation;
	}
	
	/**
	 * public setter
	 *
     * Valuation reported for the position, such as NPV or accrued interest. The asset/object references in the valuations should refer to the deal or components of the deal in the position, e.g. legs, streams, or underlyers.
     *
     * @param java.util.List<com.leansoft.fpml.nano.AssetValuation>
	 */
	public void setValuation(List<AssetValuation> valuation) {
	    this.valuation = valuation;
	}
	/**
	 * public getter
	 *
     * @returns java.lang.String
	 */
	public String getId() {
	    return this.id;
	}
	
	/**
	 * public setter
	 *
     * @param java.lang.String
	 */
	public void setId(String id) {
	    this.id = id;
	}

}