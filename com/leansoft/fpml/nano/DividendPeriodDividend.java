// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigDecimal;

/**
 * A time bounded dividend period, with an expected dividend for each period.
 */
public class DividendPeriodDividend extends DividendPeriod implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private Money dividend;
	
	@Element
	private BigDecimal multiplier;
	
    
	/**
     * public getter
     *
     * Expected dividend in this period.
     *
     * @returns com.leansoft.fpml.nano.Money
	 */
	public Money getDividend() {
	    return this.dividend;
	}
	
	/**
	 * public setter
	 *
     * Expected dividend in this period.
     *
     * @param com.leansoft.fpml.nano.Money
	 */
	public void setDividend(Money dividend) {
	    this.dividend = dividend;
	}
	/**
     * public getter
     *
     * Multiplier is a percentage value which is used to produce Deviation by multiplying the difference between Expected Dividend and Actual Dividend Deviation = Multiplier * (Expected Dividend — Actual Dividend).
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getMultiplier() {
	    return this.multiplier;
	}
	
	/**
	 * public setter
	 *
     * Multiplier is a percentage value which is used to produce Deviation by multiplying the difference between Expected Dividend and Actual Dividend Deviation = Multiplier * (Expected Dividend — Actual Dividend).
     *
     * @param java.math.BigDecimal
	 */
	public void setMultiplier(BigDecimal multiplier) {
	    this.multiplier = multiplier;
	}

}