// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * A type to define a fee or schedule of fees to be payable on the exercise of an option. This fee may be defined as an amount or a percentage of the notional exercised.
 */
public class ExerciseFeeSchedule implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private PartyOrAccountReference payerPartyReference;
	
	@Element
	private PartyOrAccountReference receiverPartyReference;
	
	@Element
	private ScheduleReference notionalReference;
	
	@Element
	private AmountSchedule feeAmountSchedule;
	
	@Element
	private Schedule feeRateSchedule;
	
	@Element
	private RelativeDateOffset feePaymentDate;
	
    
	/**
     * public getter
     *
     * A reference to the party responsible for making the payments defined by this structure.
     *
     * @returns com.leansoft.fpml.nano.PartyOrAccountReference
	 */
	public PartyOrAccountReference getPayerPartyReference() {
	    return this.payerPartyReference;
	}
	
	/**
	 * public setter
	 *
     * A reference to the party responsible for making the payments defined by this structure.
     *
     * @param com.leansoft.fpml.nano.PartyOrAccountReference
	 */
	public void setPayerPartyReference(PartyOrAccountReference payerPartyReference) {
	    this.payerPartyReference = payerPartyReference;
	}
	/**
     * public getter
     *
     * A reference to the party that receives the payments corresponding to this structure.
     *
     * @returns com.leansoft.fpml.nano.PartyOrAccountReference
	 */
	public PartyOrAccountReference getReceiverPartyReference() {
	    return this.receiverPartyReference;
	}
	
	/**
	 * public setter
	 *
     * A reference to the party that receives the payments corresponding to this structure.
     *
     * @param com.leansoft.fpml.nano.PartyOrAccountReference
	 */
	public void setReceiverPartyReference(PartyOrAccountReference receiverPartyReference) {
	    this.receiverPartyReference = receiverPartyReference;
	}
	/**
     * public getter
     *
     * A pointer style reference to the associated notional schedule defined elsewhere in the document.
     *
     * @returns com.leansoft.fpml.nano.ScheduleReference
	 */
	public ScheduleReference getNotionalReference() {
	    return this.notionalReference;
	}
	
	/**
	 * public setter
	 *
     * A pointer style reference to the associated notional schedule defined elsewhere in the document.
     *
     * @param com.leansoft.fpml.nano.ScheduleReference
	 */
	public void setNotionalReference(ScheduleReference notionalReference) {
	    this.notionalReference = notionalReference;
	}
	/**
     * public getter
     *
     * The exercise fee amount schedule. The fees are expressed as currency amounts. The currency of the fee is assumed to be that of the notional schedule referenced.
     *
     * @returns com.leansoft.fpml.nano.AmountSchedule
	 */
	public AmountSchedule getFeeAmountSchedule() {
	    return this.feeAmountSchedule;
	}
	
	/**
	 * public setter
	 *
     * The exercise fee amount schedule. The fees are expressed as currency amounts. The currency of the fee is assumed to be that of the notional schedule referenced.
     *
     * @param com.leansoft.fpml.nano.AmountSchedule
	 */
	public void setFeeAmountSchedule(AmountSchedule feeAmountSchedule) {
	    this.feeAmountSchedule = feeAmountSchedule;
	}
	/**
     * public getter
     *
     * The exercise free rate schedule. The fees are expressed as percentage rates of the notional being exercised. The currency of the fee is assumed to be that of the notional schedule referenced.
     *
     * @returns com.leansoft.fpml.nano.Schedule
	 */
	public Schedule getFeeRateSchedule() {
	    return this.feeRateSchedule;
	}
	
	/**
	 * public setter
	 *
     * The exercise free rate schedule. The fees are expressed as percentage rates of the notional being exercised. The currency of the fee is assumed to be that of the notional schedule referenced.
     *
     * @param com.leansoft.fpml.nano.Schedule
	 */
	public void setFeeRateSchedule(Schedule feeRateSchedule) {
	    this.feeRateSchedule = feeRateSchedule;
	}
	/**
     * public getter
     *
     * The date on which exercise fee(s) will be paid. It is specified as a relative date.
     *
     * @returns com.leansoft.fpml.nano.RelativeDateOffset
	 */
	public RelativeDateOffset getFeePaymentDate() {
	    return this.feePaymentDate;
	}
	
	/**
	 * public setter
	 *
     * The date on which exercise fee(s) will be paid. It is specified as a relative date.
     *
     * @param com.leansoft.fpml.nano.RelativeDateOffset
	 */
	public void setFeePaymentDate(RelativeDateOffset feePaymentDate) {
	    this.feePaymentDate = feePaymentDate;
	}

}