// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * A type defining the content model for a message allowing one party to send a report consisting of positions.
 */
@RootElement(name = "positionReport", namespace = "http://www.fpml.org/FpML-5-0/reporting")
public class PositionReport extends NotificationMessage implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private IdentifiedDate asOfDate;
	
	@Element
	private String dataSetName;
	
	@Element
	private QuotationCharacteristics quotationCharacteristics;
	
	@Element
	private List<Position> position;
	
	@Element
	private List<Party> party;
	
    
	/**
     * public getter
     *
     * The date for which this document reports positions and valuations.
     *
     * @returns com.leansoft.fpml.nano.IdentifiedDate
	 */
	public IdentifiedDate getAsOfDate() {
	    return this.asOfDate;
	}
	
	/**
	 * public setter
	 *
     * The date for which this document reports positions and valuations.
     *
     * @param com.leansoft.fpml.nano.IdentifiedDate
	 */
	public void setAsOfDate(IdentifiedDate asOfDate) {
	    this.asOfDate = asOfDate;
	}
	/**
     * public getter
     *
     * The name of the data set (portfolio, product type, etc.) that this report corresponds to. Used to help document the contents of the report.
     *
     * @returns java.lang.String
	 */
	public String getDataSetName() {
	    return this.dataSetName;
	}
	
	/**
	 * public setter
	 *
     * The name of the data set (portfolio, product type, etc.) that this report corresponds to. Used to help document the contents of the report.
     *
     * @param java.lang.String
	 */
	public void setDataSetName(String dataSetName) {
	    this.dataSetName = dataSetName;
	}
	/**
     * public getter
     *
     * The default quotation characteristics for this document (e.g. currency, location). Currency must be specified; other fields may be specified.
     *
     * @returns com.leansoft.fpml.nano.QuotationCharacteristics
	 */
	public QuotationCharacteristics getQuotationCharacteristics() {
	    return this.quotationCharacteristics;
	}
	
	/**
	 * public setter
	 *
     * The default quotation characteristics for this document (e.g. currency, location). Currency must be specified; other fields may be specified.
     *
     * @param com.leansoft.fpml.nano.QuotationCharacteristics
	 */
	public void setQuotationCharacteristics(QuotationCharacteristics quotationCharacteristics) {
	    this.quotationCharacteristics = quotationCharacteristics;
	}
	/**
     * public getter
     *
     * The positions included in the position report.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.Position>
	 */
	public List<Position> getPosition() {
	    return this.position;
	}
	
	/**
	 * public setter
	 *
     * The positions included in the position report.
     *
     * @param java.util.List<com.leansoft.fpml.nano.Position>
	 */
	public void setPosition(List<Position> position) {
	    this.position = position;
	}
	/**
     * public getter
     *
     * The parties whose trades are included included in this position report.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.Party>
	 */
	public List<Party> getParty() {
	    return this.party;
	}
	
	/**
	 * public setter
	 *
     * The parties whose trades are included included in this position report.
     *
     * @param java.util.List<com.leansoft.fpml.nano.Party>
	 */
	public void setParty(List<Party> party) {
	    this.party = party;
	}

}