// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

public class FailureToPay implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private GracePeriodExtension gracePeriodExtension;
	
	@Element
	private Money paymentRequirement;
	
    
	/**
     * public getter
     *
     * If this element is specified, indicates whether or not a grace period extension is applicable. ISDA 2003 Term: Grace Period Extension Applicable
     *
     * @returns com.leansoft.fpml.nano.GracePeriodExtension
	 */
	public GracePeriodExtension getGracePeriodExtension() {
	    return this.gracePeriodExtension;
	}
	
	/**
	 * public setter
	 *
     * If this element is specified, indicates whether or not a grace period extension is applicable. ISDA 2003 Term: Grace Period Extension Applicable
     *
     * @param com.leansoft.fpml.nano.GracePeriodExtension
	 */
	public void setGracePeriodExtension(GracePeriodExtension gracePeriodExtension) {
	    this.gracePeriodExtension = gracePeriodExtension;
	}
	/**
     * public getter
     *
     * Specifies a threshold for the failure to pay credit event. Market standard is USD 1,000,000 (JPY 100,000,000 for Japanese Yen trades) or its equivalent in the relevant obligation currency. This is applied on an aggregate basis across all Obligations of the Reference Entity. Intended to prevent technical/operational errors from triggering credit events. ISDA 2003 Term: Payment Requirement
     *
     * @returns com.leansoft.fpml.nano.Money
	 */
	public Money getPaymentRequirement() {
	    return this.paymentRequirement;
	}
	
	/**
	 * public setter
	 *
     * Specifies a threshold for the failure to pay credit event. Market standard is USD 1,000,000 (JPY 100,000,000 for Japanese Yen trades) or its equivalent in the relevant obligation currency. This is applied on an aggregate basis across all Obligations of the Reference Entity. Intended to prevent technical/operational errors from triggering credit events. ISDA 2003 Term: Payment Requirement
     *
     * @param com.leansoft.fpml.nano.Money
	 */
	public void setPaymentRequirement(Money paymentRequirement) {
	    this.paymentRequirement = paymentRequirement;
	}

}