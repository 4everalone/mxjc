// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

public class InterestLegResetDates implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private InterestLegCalculationPeriodDatesReference calculationPeriodDatesReference;
	
	@Element
	private ResetRelativeToEnum resetRelativeTo;
	
	@Element
	private ResetFrequency resetFrequency;
	
	@Element
	private RelativeDateOffset initialFixingDate;
	
	@Element
	private AdjustableDatesOrRelativeDateOffset fixingDates;
	
    
	/**
     * public getter
     *
     * A pointer style reference to the associated calculation period dates component defined elsewhere in the document.
     *
     * @returns com.leansoft.fpml.nano.InterestLegCalculationPeriodDatesReference
	 */
	public InterestLegCalculationPeriodDatesReference getCalculationPeriodDatesReference() {
	    return this.calculationPeriodDatesReference;
	}
	
	/**
	 * public setter
	 *
     * A pointer style reference to the associated calculation period dates component defined elsewhere in the document.
     *
     * @param com.leansoft.fpml.nano.InterestLegCalculationPeriodDatesReference
	 */
	public void setCalculationPeriodDatesReference(InterestLegCalculationPeriodDatesReference calculationPeriodDatesReference) {
	    this.calculationPeriodDatesReference = calculationPeriodDatesReference;
	}
	/**
     * public getter
     *
     * Specifies whether the reset dates are determined with respect to each adjusted calculation period start date or adjusted calculation period end date. If the reset frequency is specified as daily this element must not be included.
     *
     * @returns com.leansoft.fpml.nano.ResetRelativeToEnum
	 */
	public ResetRelativeToEnum getResetRelativeTo() {
	    return this.resetRelativeTo;
	}
	
	/**
	 * public setter
	 *
     * Specifies whether the reset dates are determined with respect to each adjusted calculation period start date or adjusted calculation period end date. If the reset frequency is specified as daily this element must not be included.
     *
     * @param com.leansoft.fpml.nano.ResetRelativeToEnum
	 */
	public void setResetRelativeTo(ResetRelativeToEnum resetRelativeTo) {
	    this.resetRelativeTo = resetRelativeTo;
	}
	/**
     * public getter
     *
     * The frequency at which reset dates occur. In the case of a weekly reset frequency, also specifies the day of the week that the reset occurs. If the reset frequency is greater than the calculation period frequency then this implies that more than one reset date is established for each calculation period and some form of rate averaging is applicable.
     *
     * @returns com.leansoft.fpml.nano.ResetFrequency
	 */
	public ResetFrequency getResetFrequency() {
	    return this.resetFrequency;
	}
	
	/**
	 * public setter
	 *
     * The frequency at which reset dates occur. In the case of a weekly reset frequency, also specifies the day of the week that the reset occurs. If the reset frequency is greater than the calculation period frequency then this implies that more than one reset date is established for each calculation period and some form of rate averaging is applicable.
     *
     * @param com.leansoft.fpml.nano.ResetFrequency
	 */
	public void setResetFrequency(ResetFrequency resetFrequency) {
	    this.resetFrequency = resetFrequency;
	}
	/**
     * public getter
     *
     * Initial fixing date expressed as an offset to another date defined elsewhere in the document.
     *
     * @returns com.leansoft.fpml.nano.RelativeDateOffset
	 */
	public RelativeDateOffset getInitialFixingDate() {
	    return this.initialFixingDate;
	}
	
	/**
	 * public setter
	 *
     * Initial fixing date expressed as an offset to another date defined elsewhere in the document.
     *
     * @param com.leansoft.fpml.nano.RelativeDateOffset
	 */
	public void setInitialFixingDate(RelativeDateOffset initialFixingDate) {
	    this.initialFixingDate = initialFixingDate;
	}
	/**
     * public getter
     *
     * Specifies the fixing date relative to the reset date in terms of a business days offset, or by providing a series of adjustable dates
     *
     * @returns com.leansoft.fpml.nano.AdjustableDatesOrRelativeDateOffset
	 */
	public AdjustableDatesOrRelativeDateOffset getFixingDates() {
	    return this.fixingDates;
	}
	
	/**
	 * public setter
	 *
     * Specifies the fixing date relative to the reset date in terms of a business days offset, or by providing a series of adjustable dates
     *
     * @param com.leansoft.fpml.nano.AdjustableDatesOrRelativeDateOffset
	 */
	public void setFixingDates(AdjustableDatesOrRelativeDateOffset fixingDates) {
	    this.fixingDates = fixingDates;
	}

}