// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * A type for defining a series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the dates.
 */
public class AdjustableDates implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private List<IdentifiedDate> unadjustedDate;
	
	@Element
	private BusinessDayAdjustments dateAdjustments;
	
    
	/**
     * public getter
     *
     * A date subject to adjustment.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.IdentifiedDate>
	 */
	public List<IdentifiedDate> getUnadjustedDate() {
	    return this.unadjustedDate;
	}
	
	/**
	 * public setter
	 *
     * A date subject to adjustment.
     *
     * @param java.util.List<com.leansoft.fpml.nano.IdentifiedDate>
	 */
	public void setUnadjustedDate(List<IdentifiedDate> unadjustedDate) {
	    this.unadjustedDate = unadjustedDate;
	}
	/**
     * public getter
     *
     * The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.
     *
     * @returns com.leansoft.fpml.nano.BusinessDayAdjustments
	 */
	public BusinessDayAdjustments getDateAdjustments() {
	    return this.dateAdjustments;
	}
	
	/**
	 * public setter
	 *
     * The business day convention and financial business centers used for adjusting the date if it would otherwise fall on a day that is not a business dat in the specified business centers.
     *
     * @param com.leansoft.fpml.nano.BusinessDayAdjustments
	 */
	public void setDateAdjustments(BusinessDayAdjustments dateAdjustments) {
	    this.dateAdjustments = dateAdjustments;
	}

}