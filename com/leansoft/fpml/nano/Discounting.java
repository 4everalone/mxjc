// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigDecimal;

/**
 * A type defining discounting information. The 2000 ISDA definitions, section 8.4. discounting (related to the calculation of a discounted fixed amount or floating amount) apply. This type must only be included if discounting applies.
 */
public class Discounting implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private DiscountingTypeEnum discountingType;
	
	@Element
	private BigDecimal discountRate;
	
	@Element
	private DayCountFraction discountRateDayCountFraction;
	
    
	/**
     * public getter
     *
     * The discounting method that is applicable.
     *
     * @returns com.leansoft.fpml.nano.DiscountingTypeEnum
	 */
	public DiscountingTypeEnum getDiscountingType() {
	    return this.discountingType;
	}
	
	/**
	 * public setter
	 *
     * The discounting method that is applicable.
     *
     * @param com.leansoft.fpml.nano.DiscountingTypeEnum
	 */
	public void setDiscountingType(DiscountingTypeEnum discountingType) {
	    this.discountingType = discountingType;
	}
	/**
     * public getter
     *
     * A discount rate, expressed as a decimal, to be used in the calculation of a discounted amount. A discount amount of 5% would be represented as 0.05.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getDiscountRate() {
	    return this.discountRate;
	}
	
	/**
	 * public setter
	 *
     * A discount rate, expressed as a decimal, to be used in the calculation of a discounted amount. A discount amount of 5% would be represented as 0.05.
     *
     * @param java.math.BigDecimal
	 */
	public void setDiscountRate(BigDecimal discountRate) {
	    this.discountRate = discountRate;
	}
	/**
     * public getter
     *
     * A discount day count fraction to be used in the calculation of a discounted amount.
     *
     * @returns com.leansoft.fpml.nano.DayCountFraction
	 */
	public DayCountFraction getDiscountRateDayCountFraction() {
	    return this.discountRateDayCountFraction;
	}
	
	/**
	 * public setter
	 *
     * A discount day count fraction to be used in the calculation of a discounted amount.
     *
     * @param com.leansoft.fpml.nano.DayCountFraction
	 */
	public void setDiscountRateDayCountFraction(DayCountFraction discountRateDayCountFraction) {
	    this.discountRateDayCountFraction = discountRateDayCountFraction;
	}

}