// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * An abstract base class for all directional leg types with effective date, termination date, and underlyer where a payer makes a stream of payments of greater than zero value to a receiver.
 */
public abstract class DirectionalLegUnderlyer extends DirectionalLeg implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private Underlyer underlyer;
	
	@Element
	private SettlementTypeEnum settlementType;
	
	@Element
	private AdjustableOrRelativeDate settlementDate;
	
	@Element
	private Money settlementAmount;
	
	@Element
	private Currency settlementCurrency;
	
	@Element
	private FxFeature fxFeature;
	
    
	/**
     * public getter
     *
     * Specifies the underlyer of the leg.
     *
     * @returns com.leansoft.fpml.nano.Underlyer
	 */
	public Underlyer getUnderlyer() {
	    return this.underlyer;
	}
	
	/**
	 * public setter
	 *
     * Specifies the underlyer of the leg.
     *
     * @param com.leansoft.fpml.nano.Underlyer
	 */
	public void setUnderlyer(Underlyer underlyer) {
	    this.underlyer = underlyer;
	}
	/**
	 * public getter
	 *
     * @returns com.leansoft.fpml.nano.SettlementTypeEnum
	 */
	public SettlementTypeEnum getSettlementType() {
	    return this.settlementType;
	}
	
	/**
	 * public setter
	 *
     * @param com.leansoft.fpml.nano.SettlementTypeEnum
	 */
	public void setSettlementType(SettlementTypeEnum settlementType) {
	    this.settlementType = settlementType;
	}
	/**
	 * public getter
	 *
     * @returns com.leansoft.fpml.nano.AdjustableOrRelativeDate
	 */
	public AdjustableOrRelativeDate getSettlementDate() {
	    return this.settlementDate;
	}
	
	/**
	 * public setter
	 *
     * @param com.leansoft.fpml.nano.AdjustableOrRelativeDate
	 */
	public void setSettlementDate(AdjustableOrRelativeDate settlementDate) {
	    this.settlementDate = settlementDate;
	}
	/**
     * public getter
     *
     * Settlement Amount
     *
     * @returns com.leansoft.fpml.nano.Money
	 */
	public Money getSettlementAmount() {
	    return this.settlementAmount;
	}
	
	/**
	 * public setter
	 *
     * Settlement Amount
     *
     * @param com.leansoft.fpml.nano.Money
	 */
	public void setSettlementAmount(Money settlementAmount) {
	    this.settlementAmount = settlementAmount;
	}
	/**
     * public getter
     *
     * Settlement Currency for use where the Settlement Amount cannot be known in advance
     *
     * @returns com.leansoft.fpml.nano.Currency
	 */
	public Currency getSettlementCurrency() {
	    return this.settlementCurrency;
	}
	
	/**
	 * public setter
	 *
     * Settlement Currency for use where the Settlement Amount cannot be known in advance
     *
     * @param com.leansoft.fpml.nano.Currency
	 */
	public void setSettlementCurrency(Currency settlementCurrency) {
	    this.settlementCurrency = settlementCurrency;
	}
	/**
     * public getter
     *
     * Quanto, Composite, or Cross Currency FX features.
     *
     * @returns com.leansoft.fpml.nano.FxFeature
	 */
	public FxFeature getFxFeature() {
	    return this.fxFeature;
	}
	
	/**
	 * public setter
	 *
     * Quanto, Composite, or Cross Currency FX features.
     *
     * @param com.leansoft.fpml.nano.FxFeature
	 */
	public void setFxFeature(FxFeature fxFeature) {
	    this.fxFeature = fxFeature;
	}

}