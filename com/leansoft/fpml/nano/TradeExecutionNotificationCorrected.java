// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

/**
 * Notification that a trade execution has been corrected. This is only used for correcting a notice of execution, not for post-trade events such as increases or amendments.
 */
@RootElement(name = "tradeExecutionNotificationCorrected", namespace = "http://www.fpml.org/FpML-5-0/reporting")
public class TradeExecutionNotificationCorrected extends NotificationMessage implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private Trade originalTrade;
	
	@Element
	private List<TradeIdentifier> originalTradeIdentifier;
	
	@Element
	private Trade revisedTrade;
	
	@Element
	private List<Party> party;
	
    
	/**
     * public getter
     *
     * Complete description of the trade prior to the modification.
     *
     * @returns com.leansoft.fpml.nano.Trade
	 */
	public Trade getOriginalTrade() {
	    return this.originalTrade;
	}
	
	/**
	 * public setter
	 *
     * Complete description of the trade prior to the modification.
     *
     * @param com.leansoft.fpml.nano.Trade
	 */
	public void setOriginalTrade(Trade originalTrade) {
	    this.originalTrade = originalTrade;
	}
	/**
     * public getter
     *
     * Identifiers of the trade prior to the modification.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.TradeIdentifier>
	 */
	public List<TradeIdentifier> getOriginalTradeIdentifier() {
	    return this.originalTradeIdentifier;
	}
	
	/**
	 * public setter
	 *
     * Identifiers of the trade prior to the modification.
     *
     * @param java.util.List<com.leansoft.fpml.nano.TradeIdentifier>
	 */
	public void setOriginalTradeIdentifier(List<TradeIdentifier> originalTradeIdentifier) {
	    this.originalTradeIdentifier = originalTradeIdentifier;
	}
	/**
     * public getter
     *
     * Complete description of the trade after the modification.
     *
     * @returns com.leansoft.fpml.nano.Trade
	 */
	public Trade getRevisedTrade() {
	    return this.revisedTrade;
	}
	
	/**
	 * public setter
	 *
     * Complete description of the trade after the modification.
     *
     * @param com.leansoft.fpml.nano.Trade
	 */
	public void setRevisedTrade(Trade revisedTrade) {
	    this.revisedTrade = revisedTrade;
	}
	/**
     * public getter
     *
     * Parties referenced by the trade.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.Party>
	 */
	public List<Party> getParty() {
	    return this.party;
	}
	
	/**
	 * public setter
	 *
     * Parties referenced by the trade.
     *
     * @param java.util.List<com.leansoft.fpml.nano.Party>
	 */
	public void setParty(List<Party> party) {
	    this.party = party;
	}

}