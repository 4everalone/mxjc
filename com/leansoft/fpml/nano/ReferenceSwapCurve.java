// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;

/**
 * A complex type used to specify the option and convertible bond option strike when expressed in reference to a swap curve.
 */
public class ReferenceSwapCurve implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private SwapCurveValuation swapUnwindValue;
	
	@Element
	private MakeWholeAmount makeWholeAmount;
	
    
	/**
	 * public getter
	 *
     * @returns com.leansoft.fpml.nano.SwapCurveValuation
	 */
	public SwapCurveValuation getSwapUnwindValue() {
	    return this.swapUnwindValue;
	}
	
	/**
	 * public setter
	 *
     * @param com.leansoft.fpml.nano.SwapCurveValuation
	 */
	public void setSwapUnwindValue(SwapCurveValuation swapUnwindValue) {
	    this.swapUnwindValue = swapUnwindValue;
	}
	/**
     * public getter
     *
     * Amount to be paid by the buyer of the option if the option is exercised prior to the Early Call Date. (The market practice in the convertible bond option space being that the buyer should be penalized if he/she exercises the option early on.)
     *
     * @returns com.leansoft.fpml.nano.MakeWholeAmount
	 */
	public MakeWholeAmount getMakeWholeAmount() {
	    return this.makeWholeAmount;
	}
	
	/**
	 * public setter
	 *
     * Amount to be paid by the buyer of the option if the option is exercised prior to the Early Call Date. (The market practice in the convertible bond option space being that the buyer should be penalized if he/she exercises the option early on.)
     *
     * @param com.leansoft.fpml.nano.MakeWholeAmount
	 */
	public void setMakeWholeAmount(MakeWholeAmount makeWholeAmount) {
	    this.makeWholeAmount = makeWholeAmount;
	}

}