// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.List;

@RootElement(name = "creditDefaultSwap", namespace = "http://www.fpml.org/FpML-5-0/reporting")
public class CreditDefaultSwap extends Product implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private GeneralTerms generalTerms;
	
	@Element
	private FeeLeg feeLeg;
	
	@Element
	private List<ProtectionTerms> protectionTerms;
	
	@Element
	private List<SettlementTerms> cashSettlementTermsOrPhysicalSettlementTerms;
	
    
	/**
     * public getter
     *
     * This element contains all the data that appears in the section entitled "1. General Terms" in the 2003 ISDA Credit Derivatives Confirmation.
     *
     * @returns com.leansoft.fpml.nano.GeneralTerms
	 */
	public GeneralTerms getGeneralTerms() {
	    return this.generalTerms;
	}
	
	/**
	 * public setter
	 *
     * This element contains all the data that appears in the section entitled "1. General Terms" in the 2003 ISDA Credit Derivatives Confirmation.
     *
     * @param com.leansoft.fpml.nano.GeneralTerms
	 */
	public void setGeneralTerms(GeneralTerms generalTerms) {
	    this.generalTerms = generalTerms;
	}
	/**
     * public getter
     *
     * This element contains all the terms relevant to defining the fixed amounts/payments per the applicable ISDA definitions.
     *
     * @returns com.leansoft.fpml.nano.FeeLeg
	 */
	public FeeLeg getFeeLeg() {
	    return this.feeLeg;
	}
	
	/**
	 * public setter
	 *
     * This element contains all the terms relevant to defining the fixed amounts/payments per the applicable ISDA definitions.
     *
     * @param com.leansoft.fpml.nano.FeeLeg
	 */
	public void setFeeLeg(FeeLeg feeLeg) {
	    this.feeLeg = feeLeg;
	}
	/**
     * public getter
     *
     * This element contains all the terms relevant to defining the applicable floating rate payer calculation amount, credit events and associated conditions to settlement, and reference obligations.
     *
     * @returns java.util.List<com.leansoft.fpml.nano.ProtectionTerms>
	 */
	public List<ProtectionTerms> getProtectionTerms() {
	    return this.protectionTerms;
	}
	
	/**
	 * public setter
	 *
     * This element contains all the terms relevant to defining the applicable floating rate payer calculation amount, credit events and associated conditions to settlement, and reference obligations.
     *
     * @param java.util.List<com.leansoft.fpml.nano.ProtectionTerms>
	 */
	public void setProtectionTerms(List<ProtectionTerms> protectionTerms) {
	    this.protectionTerms = protectionTerms;
	}
	/**
	 * public getter
	 *
     * @returns java.util.List<com.leansoft.fpml.nano.SettlementTerms>
	 */
	public List<SettlementTerms> getCashSettlementTermsOrPhysicalSettlementTerms() {
	    return this.cashSettlementTermsOrPhysicalSettlementTerms;
	}
	
	/**
	 * public setter
	 *
     * @param java.util.List<com.leansoft.fpml.nano.SettlementTerms>
	 */
	public void setCashSettlementTermsOrPhysicalSettlementTerms(List<SettlementTerms> cashSettlementTermsOrPhysicalSettlementTerms) {
	    this.cashSettlementTermsOrPhysicalSettlementTerms = cashSettlementTermsOrPhysicalSettlementTerms;
	}

}