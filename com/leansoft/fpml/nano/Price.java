// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.math.BigDecimal;

/**
 * A type describing the strike price.
 */
public class Price implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private Commission commission;
	
	@Element
	private DeterminationMethod determinationMethod;
	
	@Element
	private AmountReference amountRelativeTo;
	
	@Element
	private ActualPrice grossPrice;
	
	@Element
	private ActualPrice netPrice;
	
	@Element
	private BigDecimal accruedInterestPrice;
	
	@Element
	private FxConversion fxConversion;
	
	@Element
	private BigDecimal cleanNetPrice;
	
	@Element
	private QuotationCharacteristics quotationCharacteristics;
	
    
	/**
     * public getter
     *
     * This optional component specifies the commission to be charged for executing the hedge transactions.
     *
     * @returns com.leansoft.fpml.nano.Commission
	 */
	public Commission getCommission() {
	    return this.commission;
	}
	
	/**
	 * public setter
	 *
     * This optional component specifies the commission to be charged for executing the hedge transactions.
     *
     * @param com.leansoft.fpml.nano.Commission
	 */
	public void setCommission(Commission commission) {
	    this.commission = commission;
	}
	/**
     * public getter
     *
     * Specifies the method according to which an amount or a date is determined.
     *
     * @returns com.leansoft.fpml.nano.DeterminationMethod
	 */
	public DeterminationMethod getDeterminationMethod() {
	    return this.determinationMethod;
	}
	
	/**
	 * public setter
	 *
     * Specifies the method according to which an amount or a date is determined.
     *
     * @param com.leansoft.fpml.nano.DeterminationMethod
	 */
	public void setDeterminationMethod(DeterminationMethod determinationMethod) {
	    this.determinationMethod = determinationMethod;
	}
	/**
     * public getter
     *
     * The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.
     *
     * @returns com.leansoft.fpml.nano.AmountReference
	 */
	public AmountReference getAmountRelativeTo() {
	    return this.amountRelativeTo;
	}
	
	/**
	 * public setter
	 *
     * The href attribute value will be a pointer style reference to the element or component elsewhere in the document where the anchor amount is defined.
     *
     * @param com.leansoft.fpml.nano.AmountReference
	 */
	public void setAmountRelativeTo(AmountReference amountRelativeTo) {
	    this.amountRelativeTo = amountRelativeTo;
	}
	/**
     * public getter
     *
     * Specifies the price of the underlyer, before commissions.
     *
     * @returns com.leansoft.fpml.nano.ActualPrice
	 */
	public ActualPrice getGrossPrice() {
	    return this.grossPrice;
	}
	
	/**
	 * public setter
	 *
     * Specifies the price of the underlyer, before commissions.
     *
     * @param com.leansoft.fpml.nano.ActualPrice
	 */
	public void setGrossPrice(ActualPrice grossPrice) {
	    this.grossPrice = grossPrice;
	}
	/**
     * public getter
     *
     * Specifies the price of the underlyer, net of commissions.
     *
     * @returns com.leansoft.fpml.nano.ActualPrice
	 */
	public ActualPrice getNetPrice() {
	    return this.netPrice;
	}
	
	/**
	 * public setter
	 *
     * Specifies the price of the underlyer, net of commissions.
     *
     * @param com.leansoft.fpml.nano.ActualPrice
	 */
	public void setNetPrice(ActualPrice netPrice) {
	    this.netPrice = netPrice;
	}
	/**
     * public getter
     *
     * Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getAccruedInterestPrice() {
	    return this.accruedInterestPrice;
	}
	
	/**
	 * public setter
	 *
     * Specifies the accrued interest that are part of the dirty price in the case of a fixed income security or a convertible bond. Expressed in percentage of the notional.
     *
     * @param java.math.BigDecimal
	 */
	public void setAccruedInterestPrice(BigDecimal accruedInterestPrice) {
	    this.accruedInterestPrice = accruedInterestPrice;
	}
	/**
     * public getter
     *
     * Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.
     *
     * @returns com.leansoft.fpml.nano.FxConversion
	 */
	public FxConversion getFxConversion() {
	    return this.fxConversion;
	}
	
	/**
	 * public setter
	 *
     * Specifies the currency conversion rate that applies to an amount. This rate can either be defined elsewhere in the document (case of a quanto swap), or explicitly described through this component.
     *
     * @param com.leansoft.fpml.nano.FxConversion
	 */
	public void setFxConversion(FxConversion fxConversion) {
	    this.fxConversion = fxConversion;
	}
	/**
     * public getter
     *
     * The net price excluding accrued interest. The "Dirty Price" for bonds is put in the "netPrice" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.
     *
     * @returns java.math.BigDecimal
	 */
	public BigDecimal getCleanNetPrice() {
	    return this.cleanNetPrice;
	}
	
	/**
	 * public setter
	 *
     * The net price excluding accrued interest. The "Dirty Price" for bonds is put in the "netPrice" element, which includes accrued interest. Thus netPrice - cleanNetPrice = accruedInterest. The currency and price expression for this field are the same as those for the (dirty) netPrice.
     *
     * @param java.math.BigDecimal
	 */
	public void setCleanNetPrice(BigDecimal cleanNetPrice) {
	    this.cleanNetPrice = cleanNetPrice;
	}
	/**
     * public getter
     *
     * Allows information about how the price was quoted to be provided.
     *
     * @returns com.leansoft.fpml.nano.QuotationCharacteristics
	 */
	public QuotationCharacteristics getQuotationCharacteristics() {
	    return this.quotationCharacteristics;
	}
	
	/**
	 * public setter
	 *
     * Allows information about how the price was quoted to be provided.
     *
     * @param com.leansoft.fpml.nano.QuotationCharacteristics
	 */
	public void setQuotationCharacteristics(QuotationCharacteristics quotationCharacteristics) {
	    this.quotationCharacteristics = quotationCharacteristics;
	}

}