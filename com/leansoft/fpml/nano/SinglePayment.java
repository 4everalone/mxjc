// Generated by xsd compiler for android/java
// DO NOT CHANGE!
package com.leansoft.fpml.nano;

import java.io.Serializable;
import com.leansoft.nano.annotation.*;
import java.util.Date;

public class SinglePayment implements Serializable {

    private static final long serialVersionUID = -1L;

	@Element
	private Date adjustablePaymentDate;
	
	@Element
	private Date adjustedPaymentDate;
	
	@Element
	private Money fixedAmount;
	
    
	/**
     * public getter
     *
     * A fixed amount payment date that shall be subject to adjustment in accordance with the applicable business day convention if it would otherwise fall on a day that is not a business day. The applicable business day convention and business day are those specified in the dateAdjustments element within the generalTerms component. ISDA 2003 Term: Fixed Rate Payer Payment Date
     *
     * @returns java.util.Date
	 */
	public Date getAdjustablePaymentDate() {
	    return this.adjustablePaymentDate;
	}
	
	/**
	 * public setter
	 *
     * A fixed amount payment date that shall be subject to adjustment in accordance with the applicable business day convention if it would otherwise fall on a day that is not a business day. The applicable business day convention and business day are those specified in the dateAdjustments element within the generalTerms component. ISDA 2003 Term: Fixed Rate Payer Payment Date
     *
     * @param java.util.Date
	 */
	public void setAdjustablePaymentDate(Date adjustablePaymentDate) {
	    this.adjustablePaymentDate = adjustablePaymentDate;
	}
	/**
     * public getter
     *
     * The adjusted payment date. This date should already be adjusted for any applicable business day convention. This component is not intended for use in trade confirmation but may be specified to allow the fee structure to also serve as a cashflow type component.
     *
     * @returns java.util.Date
	 */
	public Date getAdjustedPaymentDate() {
	    return this.adjustedPaymentDate;
	}
	
	/**
	 * public setter
	 *
     * The adjusted payment date. This date should already be adjusted for any applicable business day convention. This component is not intended for use in trade confirmation but may be specified to allow the fee structure to also serve as a cashflow type component.
     *
     * @param java.util.Date
	 */
	public void setAdjustedPaymentDate(Date adjustedPaymentDate) {
	    this.adjustedPaymentDate = adjustedPaymentDate;
	}
	/**
     * public getter
     *
     * A fixed payment amount. ISDA 2003 Term: Fixed Amount
     *
     * @returns com.leansoft.fpml.nano.Money
	 */
	public Money getFixedAmount() {
	    return this.fixedAmount;
	}
	
	/**
	 * public setter
	 *
     * A fixed payment amount. ISDA 2003 Term: Fixed Amount
     *
     * @param com.leansoft.fpml.nano.Money
	 */
	public void setFixedAmount(Money fixedAmount) {
	    this.fixedAmount = fixedAmount;
	}

}